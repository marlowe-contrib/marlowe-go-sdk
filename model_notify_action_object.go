/*
Marlowe Runtime REST API

REST API for Marlowe Runtime

API version: 0.0.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marloweruntime

import (
	"encoding/json"
)

// checks if the NotifyActionObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NotifyActionObject{}

// NotifyActionObject struct for NotifyActionObject
type NotifyActionObject struct {
	NotifyIf Observation `json:"notify_if"`
}

// NewNotifyActionObject instantiates a new NotifyActionObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotifyActionObject(notifyIf Observation) *NotifyActionObject {
	this := NotifyActionObject{}
	this.NotifyIf = notifyIf
	return &this
}

// NewNotifyActionObjectWithDefaults instantiates a new NotifyActionObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotifyActionObjectWithDefaults() *NotifyActionObject {
	this := NotifyActionObject{}
	return &this
}

// GetNotifyIf returns the NotifyIf field value
func (o *NotifyActionObject) GetNotifyIf() Observation {
	if o == nil {
		var ret Observation
		return ret
	}

	return o.NotifyIf
}

// GetNotifyIfOk returns a tuple with the NotifyIf field value
// and a boolean to check if the value has been set.
func (o *NotifyActionObject) GetNotifyIfOk() (*Observation, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NotifyIf, true
}

// SetNotifyIf sets field value
func (o *NotifyActionObject) SetNotifyIf(v Observation) {
	o.NotifyIf = v
}

func (o NotifyActionObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NotifyActionObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["notify_if"] = o.NotifyIf
	return toSerialize, nil
}

type NullableNotifyActionObject struct {
	value *NotifyActionObject
	isSet bool
}

func (v NullableNotifyActionObject) Get() *NotifyActionObject {
	return v.value
}

func (v *NullableNotifyActionObject) Set(val *NotifyActionObject) {
	v.value = val
	v.isSet = true
}

func (v NullableNotifyActionObject) IsSet() bool {
	return v.isSet
}

func (v *NullableNotifyActionObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotifyActionObject(val *NotifyActionObject) *NullableNotifyActionObject {
	return &NullableNotifyActionObject{value: val, isSet: true}
}

func (v NullableNotifyActionObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotifyActionObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


