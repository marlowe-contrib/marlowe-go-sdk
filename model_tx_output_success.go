/*
Marlowe Runtime REST API

REST API for Marlowe Runtime

API version: 0.0.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marloweruntime

import (
	"encoding/json"
)

// checks if the TxOutputSuccess type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TxOutputSuccess{}

// TxOutputSuccess Marlowe transaction output information.
type TxOutputSuccess struct {
	Contract Contract `json:"contract"`
	Payments []Payment `json:"payments"`
	State MarloweState `json:"state"`
	Warnings []TransactionWarning `json:"warnings"`
}

// NewTxOutputSuccess instantiates a new TxOutputSuccess object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTxOutputSuccess(contract Contract, payments []Payment, state MarloweState, warnings []TransactionWarning) *TxOutputSuccess {
	this := TxOutputSuccess{}
	this.Contract = contract
	this.Payments = payments
	this.State = state
	this.Warnings = warnings
	return &this
}

// NewTxOutputSuccessWithDefaults instantiates a new TxOutputSuccess object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTxOutputSuccessWithDefaults() *TxOutputSuccess {
	this := TxOutputSuccess{}
	return &this
}

// GetContract returns the Contract field value
func (o *TxOutputSuccess) GetContract() Contract {
	if o == nil {
		var ret Contract
		return ret
	}

	return o.Contract
}

// GetContractOk returns a tuple with the Contract field value
// and a boolean to check if the value has been set.
func (o *TxOutputSuccess) GetContractOk() (*Contract, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Contract, true
}

// SetContract sets field value
func (o *TxOutputSuccess) SetContract(v Contract) {
	o.Contract = v
}

// GetPayments returns the Payments field value
func (o *TxOutputSuccess) GetPayments() []Payment {
	if o == nil {
		var ret []Payment
		return ret
	}

	return o.Payments
}

// GetPaymentsOk returns a tuple with the Payments field value
// and a boolean to check if the value has been set.
func (o *TxOutputSuccess) GetPaymentsOk() ([]Payment, bool) {
	if o == nil {
		return nil, false
	}
	return o.Payments, true
}

// SetPayments sets field value
func (o *TxOutputSuccess) SetPayments(v []Payment) {
	o.Payments = v
}

// GetState returns the State field value
func (o *TxOutputSuccess) GetState() MarloweState {
	if o == nil {
		var ret MarloweState
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *TxOutputSuccess) GetStateOk() (*MarloweState, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *TxOutputSuccess) SetState(v MarloweState) {
	o.State = v
}

// GetWarnings returns the Warnings field value
func (o *TxOutputSuccess) GetWarnings() []TransactionWarning {
	if o == nil {
		var ret []TransactionWarning
		return ret
	}

	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value
// and a boolean to check if the value has been set.
func (o *TxOutputSuccess) GetWarningsOk() ([]TransactionWarning, bool) {
	if o == nil {
		return nil, false
	}
	return o.Warnings, true
}

// SetWarnings sets field value
func (o *TxOutputSuccess) SetWarnings(v []TransactionWarning) {
	o.Warnings = v
}

func (o TxOutputSuccess) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TxOutputSuccess) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["contract"] = o.Contract
	toSerialize["payments"] = o.Payments
	toSerialize["state"] = o.State
	toSerialize["warnings"] = o.Warnings
	return toSerialize, nil
}

type NullableTxOutputSuccess struct {
	value *TxOutputSuccess
	isSet bool
}

func (v NullableTxOutputSuccess) Get() *TxOutputSuccess {
	return v.value
}

func (v *NullableTxOutputSuccess) Set(val *TxOutputSuccess) {
	v.value = val
	v.isSet = true
}

func (v NullableTxOutputSuccess) IsSet() bool {
	return v.isSet
}

func (v *NullableTxOutputSuccess) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTxOutputSuccess(val *TxOutputSuccess) *NullableTxOutputSuccess {
	return &NullableTxOutputSuccess{value: val, isSet: true}
}

func (v NullableTxOutputSuccess) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTxOutputSuccess) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


