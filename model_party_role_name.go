/*
Marlowe Runtime REST API

REST API for Marlowe Runtime

API version: 0.0.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marloweruntime

import (
	"encoding/json"
)

// checks if the PartyRoleName type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PartyRoleName{}

// PartyRoleName Refers to a party by role name.
type PartyRoleName struct {
	RoleToken string `json:"role_token"`
}

// NewPartyRoleName instantiates a new PartyRoleName object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPartyRoleName(roleToken string) *PartyRoleName {
	this := PartyRoleName{}
	this.RoleToken = roleToken
	return &this
}

// NewPartyRoleNameWithDefaults instantiates a new PartyRoleName object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPartyRoleNameWithDefaults() *PartyRoleName {
	this := PartyRoleName{}
	return &this
}

// GetRoleToken returns the RoleToken field value
func (o *PartyRoleName) GetRoleToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RoleToken
}

// GetRoleTokenOk returns a tuple with the RoleToken field value
// and a boolean to check if the value has been set.
func (o *PartyRoleName) GetRoleTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RoleToken, true
}

// SetRoleToken sets field value
func (o *PartyRoleName) SetRoleToken(v string) {
	o.RoleToken = v
}

func (o PartyRoleName) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PartyRoleName) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["role_token"] = o.RoleToken
	return toSerialize, nil
}

type NullablePartyRoleName struct {
	value *PartyRoleName
	isSet bool
}

func (v NullablePartyRoleName) Get() *PartyRoleName {
	return v.value
}

func (v *NullablePartyRoleName) Set(val *PartyRoleName) {
	v.value = val
	v.isSet = true
}

func (v NullablePartyRoleName) IsSet() bool {
	return v.isSet
}

func (v *NullablePartyRoleName) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePartyRoleName(val *PartyRoleName) *NullablePartyRoleName {
	return &NullablePartyRoleName{value: val, isSet: true}
}

func (v NullablePartyRoleName) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePartyRoleName) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


