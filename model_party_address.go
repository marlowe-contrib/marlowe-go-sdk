/*
Marlowe Runtime REST API

REST API for Marlowe Runtime

API version: 0.0.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marloweruntime

import (
	"encoding/json"
)

// checks if the PartyAddress type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PartyAddress{}

// PartyAddress Refers to a party by Cardano address.
type PartyAddress struct {
	// A cardano address, in Bech32 format
	Address string `json:"address"`
}

// NewPartyAddress instantiates a new PartyAddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPartyAddress(address string) *PartyAddress {
	this := PartyAddress{}
	this.Address = address
	return &this
}

// NewPartyAddressWithDefaults instantiates a new PartyAddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPartyAddressWithDefaults() *PartyAddress {
	this := PartyAddress{}
	return &this
}

// GetAddress returns the Address field value
func (o *PartyAddress) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *PartyAddress) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *PartyAddress) SetAddress(v string) {
	o.Address = v
}

func (o PartyAddress) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PartyAddress) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["address"] = o.Address
	return toSerialize, nil
}

type NullablePartyAddress struct {
	value *PartyAddress
	isSet bool
}

func (v NullablePartyAddress) Get() *PartyAddress {
	return v.value
}

func (v *NullablePartyAddress) Set(val *PartyAddress) {
	v.value = val
	v.isSet = true
}

func (v NullablePartyAddress) IsSet() bool {
	return v.isSet
}

func (v *NullablePartyAddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePartyAddress(val *PartyAddress) *NullablePartyAddress {
	return &NullablePartyAddress{value: val, isSet: true}
}

func (v NullablePartyAddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePartyAddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


