/*
Marlowe Runtime REST API

REST API for Marlowe Runtime

API version: 0.0.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marloweruntime

import (
	"encoding/json"
)

// checks if the PayToAccountObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PayToAccountObject{}

// PayToAccountObject Pays funds into a party's account in the contract.
type PayToAccountObject struct {
	Account PartyObject `json:"account"`
}

// NewPayToAccountObject instantiates a new PayToAccountObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPayToAccountObject(account PartyObject) *PayToAccountObject {
	this := PayToAccountObject{}
	this.Account = account
	return &this
}

// NewPayToAccountObjectWithDefaults instantiates a new PayToAccountObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPayToAccountObjectWithDefaults() *PayToAccountObject {
	this := PayToAccountObject{}
	return &this
}

// GetAccount returns the Account field value
func (o *PayToAccountObject) GetAccount() PartyObject {
	if o == nil {
		var ret PartyObject
		return ret
	}

	return o.Account
}

// GetAccountOk returns a tuple with the Account field value
// and a boolean to check if the value has been set.
func (o *PayToAccountObject) GetAccountOk() (*PartyObject, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Account, true
}

// SetAccount sets field value
func (o *PayToAccountObject) SetAccount(v PartyObject) {
	o.Account = v
}

func (o PayToAccountObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PayToAccountObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["account"] = o.Account
	return toSerialize, nil
}

type NullablePayToAccountObject struct {
	value *PayToAccountObject
	isSet bool
}

func (v NullablePayToAccountObject) Get() *PayToAccountObject {
	return v.value
}

func (v *NullablePayToAccountObject) Set(val *PayToAccountObject) {
	v.value = val
	v.isSet = true
}

func (v NullablePayToAccountObject) IsSet() bool {
	return v.isSet
}

func (v *NullablePayToAccountObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePayToAccountObject(val *PayToAccountObject) *NullablePayToAccountObject {
	return &NullablePayToAccountObject{value: val, isSet: true}
}

func (v NullablePayToAccountObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePayToAccountObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


