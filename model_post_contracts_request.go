/*
Marlowe Runtime REST API

REST API for Marlowe Runtime

API version: 0.0.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marloweruntime

import (
	"encoding/json"
)

// checks if the PostContractsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostContractsRequest{}

// PostContractsRequest struct for PostContractsRequest
type PostContractsRequest struct {
	Contract PostContractsRequestContract `json:"contract"`
	Metadata map[string]Metadata `json:"metadata"`
	MinUTxODeposit *int64 `json:"minUTxODeposit,omitempty"`
	Roles *RolesConfig `json:"roles,omitempty"`
	Tags map[string]Metadata `json:"tags"`
	ThreadTokenName *string `json:"threadTokenName,omitempty"`
	Version MarloweVersion `json:"version"`
}

// NewPostContractsRequest instantiates a new PostContractsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostContractsRequest(contract PostContractsRequestContract, metadata map[string]Metadata, tags map[string]Metadata, version MarloweVersion) *PostContractsRequest {
	this := PostContractsRequest{}
	this.Contract = contract
	this.Metadata = metadata
	this.Tags = tags
	this.Version = version
	return &this
}

// NewPostContractsRequestWithDefaults instantiates a new PostContractsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostContractsRequestWithDefaults() *PostContractsRequest {
	this := PostContractsRequest{}
	return &this
}

// GetContract returns the Contract field value
func (o *PostContractsRequest) GetContract() PostContractsRequestContract {
	if o == nil {
		var ret PostContractsRequestContract
		return ret
	}

	return o.Contract
}

// GetContractOk returns a tuple with the Contract field value
// and a boolean to check if the value has been set.
func (o *PostContractsRequest) GetContractOk() (*PostContractsRequestContract, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Contract, true
}

// SetContract sets field value
func (o *PostContractsRequest) SetContract(v PostContractsRequestContract) {
	o.Contract = v
}

// GetMetadata returns the Metadata field value
func (o *PostContractsRequest) GetMetadata() map[string]Metadata {
	if o == nil {
		var ret map[string]Metadata
		return ret
	}

	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
func (o *PostContractsRequest) GetMetadataOk() (*map[string]Metadata, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metadata, true
}

// SetMetadata sets field value
func (o *PostContractsRequest) SetMetadata(v map[string]Metadata) {
	o.Metadata = v
}

// GetMinUTxODeposit returns the MinUTxODeposit field value if set, zero value otherwise.
func (o *PostContractsRequest) GetMinUTxODeposit() int64 {
	if o == nil || IsNil(o.MinUTxODeposit) {
		var ret int64
		return ret
	}
	return *o.MinUTxODeposit
}

// GetMinUTxODepositOk returns a tuple with the MinUTxODeposit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostContractsRequest) GetMinUTxODepositOk() (*int64, bool) {
	if o == nil || IsNil(o.MinUTxODeposit) {
		return nil, false
	}
	return o.MinUTxODeposit, true
}

// HasMinUTxODeposit returns a boolean if a field has been set.
func (o *PostContractsRequest) HasMinUTxODeposit() bool {
	if o != nil && !IsNil(o.MinUTxODeposit) {
		return true
	}

	return false
}

// SetMinUTxODeposit gets a reference to the given int64 and assigns it to the MinUTxODeposit field.
func (o *PostContractsRequest) SetMinUTxODeposit(v int64) {
	o.MinUTxODeposit = &v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *PostContractsRequest) GetRoles() RolesConfig {
	if o == nil || IsNil(o.Roles) {
		var ret RolesConfig
		return ret
	}
	return *o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostContractsRequest) GetRolesOk() (*RolesConfig, bool) {
	if o == nil || IsNil(o.Roles) {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *PostContractsRequest) HasRoles() bool {
	if o != nil && !IsNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given RolesConfig and assigns it to the Roles field.
func (o *PostContractsRequest) SetRoles(v RolesConfig) {
	o.Roles = &v
}

// GetTags returns the Tags field value
func (o *PostContractsRequest) GetTags() map[string]Metadata {
	if o == nil {
		var ret map[string]Metadata
		return ret
	}

	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value
// and a boolean to check if the value has been set.
func (o *PostContractsRequest) GetTagsOk() (*map[string]Metadata, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tags, true
}

// SetTags sets field value
func (o *PostContractsRequest) SetTags(v map[string]Metadata) {
	o.Tags = v
}

// GetThreadTokenName returns the ThreadTokenName field value if set, zero value otherwise.
func (o *PostContractsRequest) GetThreadTokenName() string {
	if o == nil || IsNil(o.ThreadTokenName) {
		var ret string
		return ret
	}
	return *o.ThreadTokenName
}

// GetThreadTokenNameOk returns a tuple with the ThreadTokenName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostContractsRequest) GetThreadTokenNameOk() (*string, bool) {
	if o == nil || IsNil(o.ThreadTokenName) {
		return nil, false
	}
	return o.ThreadTokenName, true
}

// HasThreadTokenName returns a boolean if a field has been set.
func (o *PostContractsRequest) HasThreadTokenName() bool {
	if o != nil && !IsNil(o.ThreadTokenName) {
		return true
	}

	return false
}

// SetThreadTokenName gets a reference to the given string and assigns it to the ThreadTokenName field.
func (o *PostContractsRequest) SetThreadTokenName(v string) {
	o.ThreadTokenName = &v
}

// GetVersion returns the Version field value
func (o *PostContractsRequest) GetVersion() MarloweVersion {
	if o == nil {
		var ret MarloweVersion
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *PostContractsRequest) GetVersionOk() (*MarloweVersion, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *PostContractsRequest) SetVersion(v MarloweVersion) {
	o.Version = v
}

func (o PostContractsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostContractsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["contract"] = o.Contract
	toSerialize["metadata"] = o.Metadata
	if !IsNil(o.MinUTxODeposit) {
		toSerialize["minUTxODeposit"] = o.MinUTxODeposit
	}
	if !IsNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	toSerialize["tags"] = o.Tags
	if !IsNil(o.ThreadTokenName) {
		toSerialize["threadTokenName"] = o.ThreadTokenName
	}
	toSerialize["version"] = o.Version
	return toSerialize, nil
}

type NullablePostContractsRequest struct {
	value *PostContractsRequest
	isSet bool
}

func (v NullablePostContractsRequest) Get() *PostContractsRequest {
	return v.value
}

func (v *NullablePostContractsRequest) Set(val *PostContractsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostContractsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostContractsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostContractsRequest(val *PostContractsRequest) *NullablePostContractsRequest {
	return &NullablePostContractsRequest{value: val, isSet: true}
}

func (v NullablePostContractsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostContractsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


