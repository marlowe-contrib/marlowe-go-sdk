/*
Marlowe Runtime REST API

REST API for Marlowe Runtime

API version: 0.0.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marloweruntime

import (
	"encoding/json"
)

// checks if the Greater type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Greater{}

// Greater struct for Greater
type Greater struct {
	Gt Value `json:"gt"`
	Value Value `json:"value"`
}

// NewGreater instantiates a new Greater object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGreater(gt Value, value Value) *Greater {
	this := Greater{}
	this.Gt = gt
	this.Value = value
	return &this
}

// NewGreaterWithDefaults instantiates a new Greater object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGreaterWithDefaults() *Greater {
	this := Greater{}
	return &this
}

// GetGt returns the Gt field value
func (o *Greater) GetGt() Value {
	if o == nil {
		var ret Value
		return ret
	}

	return o.Gt
}

// GetGtOk returns a tuple with the Gt field value
// and a boolean to check if the value has been set.
func (o *Greater) GetGtOk() (*Value, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Gt, true
}

// SetGt sets field value
func (o *Greater) SetGt(v Value) {
	o.Gt = v
}

// GetValue returns the Value field value
func (o *Greater) GetValue() Value {
	if o == nil {
		var ret Value
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *Greater) GetValueOk() (*Value, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *Greater) SetValue(v Value) {
	o.Value = v
}

func (o Greater) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Greater) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["gt"] = o.Gt
	toSerialize["value"] = o.Value
	return toSerialize, nil
}

type NullableGreater struct {
	value *Greater
	isSet bool
}

func (v NullableGreater) Get() *Greater {
	return v.value
}

func (v *NullableGreater) Set(val *Greater) {
	v.value = val
	v.isSet = true
}

func (v NullableGreater) IsSet() bool {
	return v.isSet
}

func (v *NullableGreater) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGreater(val *Greater) *NullableGreater {
	return &NullableGreater{value: val, isSet: true}
}

func (v NullableGreater) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGreater) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


