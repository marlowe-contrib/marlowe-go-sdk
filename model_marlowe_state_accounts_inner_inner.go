/*
Marlowe Runtime REST API

REST API for Marlowe Runtime

API version: 0.0.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marloweruntime

import (
	"encoding/json"
	"fmt"
)

// MarloweStateAccountsInnerInner - struct for MarloweStateAccountsInnerInner
type MarloweStateAccountsInnerInner struct {
	ArrayOfAccountTokenTupleInner *[]AccountTokenTupleInner
	Int32 *int32
}

// []AccountTokenTupleInnerAsMarloweStateAccountsInnerInner is a convenience function that returns []AccountTokenTupleInner wrapped in MarloweStateAccountsInnerInner
func ArrayOfAccountTokenTupleInnerAsMarloweStateAccountsInnerInner(v *[]AccountTokenTupleInner) MarloweStateAccountsInnerInner {
	return MarloweStateAccountsInnerInner{
		ArrayOfAccountTokenTupleInner: v,
	}
}

// int32AsMarloweStateAccountsInnerInner is a convenience function that returns int32 wrapped in MarloweStateAccountsInnerInner
func Int32AsMarloweStateAccountsInnerInner(v *int32) MarloweStateAccountsInnerInner {
	return MarloweStateAccountsInnerInner{
		Int32: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *MarloweStateAccountsInnerInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ArrayOfAccountTokenTupleInner
	err = newStrictDecoder(data).Decode(&dst.ArrayOfAccountTokenTupleInner)
	if err == nil {
		jsonArrayOfAccountTokenTupleInner, _ := json.Marshal(dst.ArrayOfAccountTokenTupleInner)
		if string(jsonArrayOfAccountTokenTupleInner) == "{}" { // empty struct
			dst.ArrayOfAccountTokenTupleInner = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfAccountTokenTupleInner = nil
	}

	// try to unmarshal data into Int32
	err = newStrictDecoder(data).Decode(&dst.Int32)
	if err == nil {
		jsonInt32, _ := json.Marshal(dst.Int32)
		if string(jsonInt32) == "{}" { // empty struct
			dst.Int32 = nil
		} else {
			match++
		}
	} else {
		dst.Int32 = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ArrayOfAccountTokenTupleInner = nil
		dst.Int32 = nil

		return fmt.Errorf("data matches more than one schema in oneOf(MarloweStateAccountsInnerInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(MarloweStateAccountsInnerInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src MarloweStateAccountsInnerInner) MarshalJSON() ([]byte, error) {
	if src.ArrayOfAccountTokenTupleInner != nil {
		return json.Marshal(&src.ArrayOfAccountTokenTupleInner)
	}

	if src.Int32 != nil {
		return json.Marshal(&src.Int32)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *MarloweStateAccountsInnerInner) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.ArrayOfAccountTokenTupleInner != nil {
		return obj.ArrayOfAccountTokenTupleInner
	}

	if obj.Int32 != nil {
		return obj.Int32
	}

	// all schemas are nil
	return nil
}

type NullableMarloweStateAccountsInnerInner struct {
	value *MarloweStateAccountsInnerInner
	isSet bool
}

func (v NullableMarloweStateAccountsInnerInner) Get() *MarloweStateAccountsInnerInner {
	return v.value
}

func (v *NullableMarloweStateAccountsInnerInner) Set(val *MarloweStateAccountsInnerInner) {
	v.value = val
	v.isSet = true
}

func (v NullableMarloweStateAccountsInnerInner) IsSet() bool {
	return v.isSet
}

func (v *NullableMarloweStateAccountsInnerInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarloweStateAccountsInnerInner(val *MarloweStateAccountsInnerInner) *NullableMarloweStateAccountsInnerInner {
	return &NullableMarloweStateAccountsInnerInner{value: val, isSet: true}
}

func (v NullableMarloweStateAccountsInnerInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarloweStateAccountsInnerInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


