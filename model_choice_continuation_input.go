/*
Marlowe Runtime REST API

REST API for Marlowe Runtime

API version: 0.0.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marloweruntime

import (
	"encoding/json"
)

// checks if the ChoiceContinuationInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChoiceContinuationInput{}

// ChoiceContinuationInput Make a choice in a contract and provide the continuation of the contract
type ChoiceContinuationInput struct {
	ContinuationHash string `json:"continuation_hash"`
	ForChoiceId ChoiceId `json:"for_choice_id"`
	InputThatChoosesNum int32 `json:"input_that_chooses_num"`
	MerkleizedContinuation Contract `json:"merkleized_continuation"`
}

// NewChoiceContinuationInput instantiates a new ChoiceContinuationInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChoiceContinuationInput(continuationHash string, forChoiceId ChoiceId, inputThatChoosesNum int32, merkleizedContinuation Contract) *ChoiceContinuationInput {
	this := ChoiceContinuationInput{}
	this.ContinuationHash = continuationHash
	this.ForChoiceId = forChoiceId
	this.InputThatChoosesNum = inputThatChoosesNum
	this.MerkleizedContinuation = merkleizedContinuation
	return &this
}

// NewChoiceContinuationInputWithDefaults instantiates a new ChoiceContinuationInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChoiceContinuationInputWithDefaults() *ChoiceContinuationInput {
	this := ChoiceContinuationInput{}
	return &this
}

// GetContinuationHash returns the ContinuationHash field value
func (o *ChoiceContinuationInput) GetContinuationHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContinuationHash
}

// GetContinuationHashOk returns a tuple with the ContinuationHash field value
// and a boolean to check if the value has been set.
func (o *ChoiceContinuationInput) GetContinuationHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContinuationHash, true
}

// SetContinuationHash sets field value
func (o *ChoiceContinuationInput) SetContinuationHash(v string) {
	o.ContinuationHash = v
}

// GetForChoiceId returns the ForChoiceId field value
func (o *ChoiceContinuationInput) GetForChoiceId() ChoiceId {
	if o == nil {
		var ret ChoiceId
		return ret
	}

	return o.ForChoiceId
}

// GetForChoiceIdOk returns a tuple with the ForChoiceId field value
// and a boolean to check if the value has been set.
func (o *ChoiceContinuationInput) GetForChoiceIdOk() (*ChoiceId, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ForChoiceId, true
}

// SetForChoiceId sets field value
func (o *ChoiceContinuationInput) SetForChoiceId(v ChoiceId) {
	o.ForChoiceId = v
}

// GetInputThatChoosesNum returns the InputThatChoosesNum field value
func (o *ChoiceContinuationInput) GetInputThatChoosesNum() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.InputThatChoosesNum
}

// GetInputThatChoosesNumOk returns a tuple with the InputThatChoosesNum field value
// and a boolean to check if the value has been set.
func (o *ChoiceContinuationInput) GetInputThatChoosesNumOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InputThatChoosesNum, true
}

// SetInputThatChoosesNum sets field value
func (o *ChoiceContinuationInput) SetInputThatChoosesNum(v int32) {
	o.InputThatChoosesNum = v
}

// GetMerkleizedContinuation returns the MerkleizedContinuation field value
func (o *ChoiceContinuationInput) GetMerkleizedContinuation() Contract {
	if o == nil {
		var ret Contract
		return ret
	}

	return o.MerkleizedContinuation
}

// GetMerkleizedContinuationOk returns a tuple with the MerkleizedContinuation field value
// and a boolean to check if the value has been set.
func (o *ChoiceContinuationInput) GetMerkleizedContinuationOk() (*Contract, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MerkleizedContinuation, true
}

// SetMerkleizedContinuation sets field value
func (o *ChoiceContinuationInput) SetMerkleizedContinuation(v Contract) {
	o.MerkleizedContinuation = v
}

func (o ChoiceContinuationInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChoiceContinuationInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["continuation_hash"] = o.ContinuationHash
	toSerialize["for_choice_id"] = o.ForChoiceId
	toSerialize["input_that_chooses_num"] = o.InputThatChoosesNum
	toSerialize["merkleized_continuation"] = o.MerkleizedContinuation
	return toSerialize, nil
}

type NullableChoiceContinuationInput struct {
	value *ChoiceContinuationInput
	isSet bool
}

func (v NullableChoiceContinuationInput) Get() *ChoiceContinuationInput {
	return v.value
}

func (v *NullableChoiceContinuationInput) Set(val *ChoiceContinuationInput) {
	v.value = val
	v.isSet = true
}

func (v NullableChoiceContinuationInput) IsSet() bool {
	return v.isSet
}

func (v *NullableChoiceContinuationInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChoiceContinuationInput(val *ChoiceContinuationInput) *NullableChoiceContinuationInput {
	return &NullableChoiceContinuationInput{value: val, isSet: true}
}

func (v NullableChoiceContinuationInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChoiceContinuationInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


