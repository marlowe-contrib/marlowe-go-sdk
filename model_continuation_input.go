/*
Marlowe Runtime REST API

REST API for Marlowe Runtime

API version: 0.0.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marloweruntime

import (
	"encoding/json"
)

// checks if the ContinuationInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContinuationInput{}

// ContinuationInput Notify a contract to check a condition and provide the continuation of the contract
type ContinuationInput struct {
	ContinuationHash string `json:"continuation_hash"`
	MerkleizedContinuation Contract `json:"merkleized_continuation"`
}

// NewContinuationInput instantiates a new ContinuationInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContinuationInput(continuationHash string, merkleizedContinuation Contract) *ContinuationInput {
	this := ContinuationInput{}
	this.ContinuationHash = continuationHash
	this.MerkleizedContinuation = merkleizedContinuation
	return &this
}

// NewContinuationInputWithDefaults instantiates a new ContinuationInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContinuationInputWithDefaults() *ContinuationInput {
	this := ContinuationInput{}
	return &this
}

// GetContinuationHash returns the ContinuationHash field value
func (o *ContinuationInput) GetContinuationHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContinuationHash
}

// GetContinuationHashOk returns a tuple with the ContinuationHash field value
// and a boolean to check if the value has been set.
func (o *ContinuationInput) GetContinuationHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContinuationHash, true
}

// SetContinuationHash sets field value
func (o *ContinuationInput) SetContinuationHash(v string) {
	o.ContinuationHash = v
}

// GetMerkleizedContinuation returns the MerkleizedContinuation field value
func (o *ContinuationInput) GetMerkleizedContinuation() Contract {
	if o == nil {
		var ret Contract
		return ret
	}

	return o.MerkleizedContinuation
}

// GetMerkleizedContinuationOk returns a tuple with the MerkleizedContinuation field value
// and a boolean to check if the value has been set.
func (o *ContinuationInput) GetMerkleizedContinuationOk() (*Contract, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MerkleizedContinuation, true
}

// SetMerkleizedContinuation sets field value
func (o *ContinuationInput) SetMerkleizedContinuation(v Contract) {
	o.MerkleizedContinuation = v
}

func (o ContinuationInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContinuationInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["continuation_hash"] = o.ContinuationHash
	toSerialize["merkleized_continuation"] = o.MerkleizedContinuation
	return toSerialize, nil
}

type NullableContinuationInput struct {
	value *ContinuationInput
	isSet bool
}

func (v NullableContinuationInput) Get() *ContinuationInput {
	return v.value
}

func (v *NullableContinuationInput) Set(val *ContinuationInput) {
	v.value = val
	v.isSet = true
}

func (v NullableContinuationInput) IsSet() bool {
	return v.isSet
}

func (v *NullableContinuationInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContinuationInput(val *ContinuationInput) *NullableContinuationInput {
	return &NullableContinuationInput{value: val, isSet: true}
}

func (v NullableContinuationInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContinuationInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


