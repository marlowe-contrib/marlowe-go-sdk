/*
Marlowe Runtime REST API

REST API for Marlowe Runtime

API version: 0.0.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marloweruntime

import (
	"encoding/json"
)

// checks if the ValueOfChoice type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ValueOfChoice{}

// ValueOfChoice struct for ValueOfChoice
type ValueOfChoice struct {
	ValueOfChoice ChoiceId `json:"value_of_choice"`
}

// NewValueOfChoice instantiates a new ValueOfChoice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewValueOfChoice(valueOfChoice ChoiceId) *ValueOfChoice {
	this := ValueOfChoice{}
	this.ValueOfChoice = valueOfChoice
	return &this
}

// NewValueOfChoiceWithDefaults instantiates a new ValueOfChoice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewValueOfChoiceWithDefaults() *ValueOfChoice {
	this := ValueOfChoice{}
	return &this
}

// GetValueOfChoice returns the ValueOfChoice field value
func (o *ValueOfChoice) GetValueOfChoice() ChoiceId {
	if o == nil {
		var ret ChoiceId
		return ret
	}

	return o.ValueOfChoice
}

// GetValueOfChoiceOk returns a tuple with the ValueOfChoice field value
// and a boolean to check if the value has been set.
func (o *ValueOfChoice) GetValueOfChoiceOk() (*ChoiceId, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ValueOfChoice, true
}

// SetValueOfChoice sets field value
func (o *ValueOfChoice) SetValueOfChoice(v ChoiceId) {
	o.ValueOfChoice = v
}

func (o ValueOfChoice) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ValueOfChoice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["value_of_choice"] = o.ValueOfChoice
	return toSerialize, nil
}

type NullableValueOfChoice struct {
	value *ValueOfChoice
	isSet bool
}

func (v NullableValueOfChoice) Get() *ValueOfChoice {
	return v.value
}

func (v *NullableValueOfChoice) Set(val *ValueOfChoice) {
	v.value = val
	v.isSet = true
}

func (v NullableValueOfChoice) IsSet() bool {
	return v.isSet
}

func (v *NullableValueOfChoice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableValueOfChoice(val *ValueOfChoice) *NullableValueOfChoice {
	return &NullableValueOfChoice{value: val, isSet: true}
}

func (v NullableValueOfChoice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableValueOfChoice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


