openapi: 3.0.0
info:
  description: REST API for Marlowe Runtime
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  title: Marlowe Runtime REST API
  version: 0.0.5.1
servers:
- url: https://marlowe-runtime-preprod-web.scdev.aws.iohkdev.io
- url: https://marlowe-runtime-preview-web.scdev.aws.iohkdev.io
- url: https://marlowe-runtime-mainnet-web.scdev.aws.iohkdev.io
- url: http://localhost:3780
paths:
  /contracts:
    get:
      description: "Get contracts published on chain. Results are returned in pages,\
        \ with paging being specified by request headers."
      operationId: getContracts
      parameters:
      - explode: true
        in: query
        name: roleCurrency
        required: false
        schema:
          items:
            description: The hex-encoded minting policy ID for a native Cardano token
            pattern: "^[a-fA-F0-9]*$"
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: tag
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: partyAddress
        required: false
        schema:
          items:
            description: "A cardano address, in Bech32 format"
            example: addr1w94f8ywk4fg672xasahtk4t9k6w3aql943uxz5rt62d4dvq8evxaf
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: partyRole
        required: false
        schema:
          items:
            description: A minting policy ID and a token name identifying a specific
              asset type. Encoded as policyId.tokenName.
            pattern: "^[a-fA-F0-9]*\\..*$"
            type: string
          type: array
        style: form
      - explode: false
        in: header
        name: Range
        required: false
        schema:
          type: string
        style: simple
      responses:
        "206":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetContractsResponse'
          description: ""
          headers:
            Accept-Ranges:
              explode: false
              schema:
                items:
                  enum:
                  - contractId
                  type: string
                type: array
              style: simple
            Content-Range:
              explode: false
              schema:
                type: string
              style: simple
            Next-Range:
              explode: false
              schema:
                type: string
              style: simple
            Total-Count:
              explode: false
              schema:
                maximum: 9223372036854775807
                minimum: -9223372036854775808
                type: integer
              style: simple
            X-Network-Id:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - type: string
                - type: integer
              style: simple
            X-Node-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Chain-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Version:
              explode: false
              schema:
                pattern: ^\d+(\.\d+)*$
                type: string
              style: simple
        "400":
          description: Invalid `Range` or `partyRole` or `partyAddress` or `tag` or
            `roleCurrency`
      security: []
      summary: Get contracts
    post:
      description: "Build an unsigned (Cardano) transaction body which opens a new\
        \ Marlowe contract. This unsigned transaction must be signed by a wallet (such\
        \ as a CIP-30 or CIP-45 wallet) before being submitted. To submit the signed\
        \ transaction, use the PUT /contracts/{contractId} endpoint."
      operationId: createContract
      parameters:
      - description: Where to send staking rewards for the Marlowe script outputs
          of this contract.
        explode: false
        in: header
        name: X-Stake-Address
        required: false
        schema:
          description: "A cardano stake address, in Bech32 format"
          example: stake1ux7lyy9nhecm033qsmel9awnr22up6jadlzkrxufr78w82gsfsn0d
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Change-Address
        required: true
        schema:
          description: "A cardano address, in Bech32 format"
          example: addr1w94f8ywk4fg672xasahtk4t9k6w3aql943uxz5rt62d4dvq8evxaf
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Address
        required: false
        schema:
          description: A comma-separated list of values
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Collateral-UTxO
        required: false
        schema:
          description: A comma-separated list of values
          type: string
        style: simple
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/PostContractsRequest'
      responses:
        "201":
          content:
            application/vendor.iog.marlowe-runtime.contract-tx-json:
              schema:
                $ref: '#/components/schemas/CreateContractResponse'
          description: ""
          headers:
            X-Network-Id:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - type: string
                - type: integer
              style: simple
            X-Node-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Chain-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Version:
              explode: false
              schema:
                pattern: ^\d+(\.\d+)*$
                type: string
              style: simple
        "400":
          description: Invalid `X-Collateral-UTxO` or `X-Address` or `X-Change-Address`
            or `body` or `X-Stake-Address`
      security: []
      summary: Create a new contract
  /contracts/sources:
    post:
      description: "Upload a bundle of marlowe objects as contract sources. This API\
        \ supports request body streaming, with newline framing between request bundles."
      operationId: createContractSources
      parameters:
      - description: The label of the top-level contract object in the bundle(s).
        explode: true
        in: query
        name: main
        required: true
        schema:
          description: An arbitrary text identifier for an object in a Marlowe object
            bundle.
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObjectBundle'
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ObjectBundle'
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/PostContractSourceResponse'
          description: ""
          headers:
            X-Network-Id:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - type: string
                - type: integer
              style: simple
            X-Node-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Chain-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Version:
              explode: false
              schema:
                pattern: ^\d+(\.\d+)*$
                type: string
              style: simple
        "400":
          description: Invalid `body` or `main`
      security: []
      summary: Upload contract sources
  /contracts/sources/{contractSourceId}:
    get:
      operationId: getContractSourceById
      parameters:
      - explode: false
        in: path
        name: contractSourceId
        required: true
        schema:
          description: The hex-encoded identifier of a Marlowe contract source
          pattern: "^[a-fA-F0-9]{64}$"
          type: string
        style: simple
      - allowEmptyValue: true
        explode: true
        in: query
        name: expand
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Contract'
          description: ""
          headers:
            X-Network-Id:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - type: string
                - type: integer
              style: simple
            X-Node-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Chain-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Version:
              explode: false
              schema:
                pattern: ^\d+(\.\d+)*$
                type: string
              style: simple
        "400":
          description: Invalid `expand`
        "404":
          description: '`contractSourceId` not found'
      security: []
      summary: Get contract source by ID
  /contracts/sources/{contractSourceId}/adjacency:
    get:
      description: Get the contract source IDs which are adjacent to a contract source
        (they appear directly in the contract source).
      operationId: getContractSourceAdjacency
      parameters:
      - explode: false
        in: path
        name: contractSourceId
        required: true
        schema:
          description: The hex-encoded identifier of a Marlowe contract source
          pattern: "^[a-fA-F0-9]{64}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ContractSourceIds'
          description: ""
          headers:
            X-Network-Id:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - type: string
                - type: integer
              style: simple
            X-Node-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Chain-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Version:
              explode: false
              schema:
                pattern: ^\d+(\.\d+)*$
                type: string
              style: simple
        "404":
          description: '`contractSourceId` not found'
      security: []
      summary: Get adjacent contract source IDs by ID
  /contracts/sources/{contractSourceId}/closure:
    get:
      description: Get the contract source IDs which appear in the full hierarchy
        of a contract source (including the ID of the contract source its self).
      operationId: getContractSourceClosure
      parameters:
      - explode: false
        in: path
        name: contractSourceId
        required: true
        schema:
          description: The hex-encoded identifier of a Marlowe contract source
          pattern: "^[a-fA-F0-9]{64}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ContractSourceIds'
          description: ""
          headers:
            X-Network-Id:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - type: string
                - type: integer
              style: simple
            X-Node-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Chain-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Version:
              explode: false
              schema:
                pattern: ^\d+(\.\d+)*$
                type: string
              style: simple
        "404":
          description: '`contractSourceId` not found'
      security: []
      summary: Get contract source closure by ID
  /contracts/{contractId}:
    get:
      operationId: getContractById
      parameters:
      - explode: false
        in: path
        name: contractId
        required: true
        schema:
          description: A reference to a transaction output with a transaction ID and
            index. The value must be URL encoded by replacing the '#' character with
            %23.
          example: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7%231
          pattern: "^[a-fA-F0-9]{64}%23[0-9]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetContractResponse'
          description: ""
          headers:
            X-Network-Id:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - type: string
                - type: integer
              style: simple
            X-Node-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Chain-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Version:
              explode: false
              schema:
                pattern: ^\d+(\.\d+)*$
                type: string
              style: simple
        "404":
          description: '`contractId` not found'
      security: []
      summary: Get contract by ID
    put:
      description: "Submit a signed (Cardano) transaction that opens a new Marlowe\
        \ contract. The transaction must have originally been created by the POST\
        \ /contracts endpoint. This endpoint will respond when the transaction is\
        \ submitted successfully to the local node, which means it will not wait for\
        \ the transaction to be published in a block. Use the GET /contracts/{contractId}\
        \ endpoint to poll the on-chain status."
      operationId: submitContract
      parameters:
      - explode: false
        in: path
        name: contractId
        required: true
        schema:
          description: A reference to a transaction output with a transaction ID and
            index. The value must be URL encoded by replacing the '#' character with
            %23.
          example: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7%231
          pattern: "^[a-fA-F0-9]{64}%23[0-9]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/TextEnvelope'
      responses:
        "202":
          content:
            application/json;charset=utf-8: {}
          description: ""
          headers:
            X-Network-Id:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - type: string
                - type: integer
              style: simple
            X-Node-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Chain-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Version:
              explode: false
              schema:
                pattern: ^\d+(\.\d+)*$
                type: string
              style: simple
        "400":
          description: Invalid `body`
        "404":
          description: '`contractId` not found'
      security: []
      summary: Submit contract to chain
  /contracts/{contractId}/next:
    get:
      description: Get inputs which could be performed on a contract withing a time
        range by the requested parties.
      operationId: getNextStepsForContract
      parameters:
      - explode: false
        in: path
        name: contractId
        required: true
        schema:
          description: A reference to a transaction output with a transaction ID and
            index. The value must be URL encoded by replacing the '#' character with
            %23.
          example: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7%231
          pattern: "^[a-fA-F0-9]{64}%23[0-9]+$"
          type: string
        style: simple
      - description: The beginning of the validity range.
        explode: true
        in: query
        name: validityStart
        required: true
        schema:
          format: yyyy-mm-ddThh:MM:ssZ
          type: string
        style: form
      - description: The end of the validity range.
        explode: true
        in: query
        name: validityEnd
        required: true
        schema:
          format: yyyy-mm-ddThh:MM:ssZ
          type: string
        style: form
      - explode: true
        in: query
        name: party
        required: false
        schema:
          items:
            description: Party (A role name or an Address)
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Next'
          description: ""
          headers:
            X-Network-Id:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - type: string
                - type: integer
              style: simple
            X-Node-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Chain-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Version:
              explode: false
              schema:
                pattern: ^\d+(\.\d+)*$
                type: string
              style: simple
        "400":
          description: Invalid `party` or `validityEnd` or `validityStart`
        "404":
          description: '`contractId` not found'
      security: []
      summary: Get next contract steps
  /contracts/{contractId}/transactions:
    get:
      description: "Get published transactions for a contract. Results are returned\
        \ in pages, with paging being specified by request headers."
      operationId: getTransactionsForContract
      parameters:
      - explode: false
        in: path
        name: contractId
        required: true
        schema:
          description: A reference to a transaction output with a transaction ID and
            index. The value must be URL encoded by replacing the '#' character with
            %23.
          example: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7%231
          pattern: "^[a-fA-F0-9]{64}%23[0-9]+$"
          type: string
        style: simple
      - explode: false
        in: header
        name: Range
        required: false
        schema:
          type: string
        style: simple
      responses:
        "206":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetTransactionsResponse'
          description: ""
          headers:
            Accept-Ranges:
              explode: false
              schema:
                items:
                  enum:
                  - transactionId
                  type: string
                type: array
              style: simple
            Content-Range:
              explode: false
              schema:
                type: string
              style: simple
            Next-Range:
              explode: false
              schema:
                type: string
              style: simple
            Total-Count:
              explode: false
              schema:
                maximum: 9223372036854775807
                minimum: -9223372036854775808
                type: integer
              style: simple
            X-Network-Id:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - type: string
                - type: integer
              style: simple
            X-Node-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Chain-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Version:
              explode: false
              schema:
                pattern: ^\d+(\.\d+)*$
                type: string
              style: simple
        "400":
          description: Invalid `Range`
        "404":
          description: '`contractId` not found'
      security: []
      summary: Get transactions for contract
    post:
      description: "Build an unsigned (Cardano) transaction body which applies inputs\
        \ to an open Marlowe contract. This unsigned transaction must be signed by\
        \ a wallet (such as a CIP-30 or CIP-45 wallet) before being submitted. To\
        \ submit the signed transaction, use the PUT /contracts/{contractId}/transactions/{transactionId}\
        \ endpoint."
      operationId: applyInputsToContract
      parameters:
      - explode: false
        in: path
        name: contractId
        required: true
        schema:
          description: A reference to a transaction output with a transaction ID and
            index. The value must be URL encoded by replacing the '#' character with
            %23.
          example: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7%231
          pattern: "^[a-fA-F0-9]{64}%23[0-9]+$"
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Change-Address
        required: true
        schema:
          description: "A cardano address, in Bech32 format"
          example: addr1w94f8ywk4fg672xasahtk4t9k6w3aql943uxz5rt62d4dvq8evxaf
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Address
        required: false
        schema:
          description: A comma-separated list of values
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Collateral-UTxO
        required: false
        schema:
          description: A comma-separated list of values
          type: string
        style: simple
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/PostTransactionsRequest'
      responses:
        "201":
          content:
            application/vendor.iog.marlowe-runtime.apply-inputs-tx-json:
              schema:
                $ref: '#/components/schemas/ApplyInputsResponse'
          description: ""
          headers:
            X-Network-Id:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - type: string
                - type: integer
              style: simple
            X-Node-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Chain-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Version:
              explode: false
              schema:
                pattern: ^\d+(\.\d+)*$
                type: string
              style: simple
        "400":
          description: Invalid `X-Collateral-UTxO` or `X-Address` or `X-Change-Address`
            or `body`
        "404":
          description: '`contractId` not found'
      security: []
      summary: Apply inputs to contract
  /contracts/{contractId}/transactions/{transactionId}:
    get:
      operationId: getContractTransactionById
      parameters:
      - explode: false
        in: path
        name: contractId
        required: true
        schema:
          description: A reference to a transaction output with a transaction ID and
            index. The value must be URL encoded by replacing the '#' character with
            %23.
          example: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7%231
          pattern: "^[a-fA-F0-9]{64}%23[0-9]+$"
          type: string
        style: simple
      - explode: false
        in: path
        name: transactionId
        required: true
        schema:
          description: The hex-encoded identifier of a Cardano transaction
          pattern: "^[a-fA-F0-9]{64}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetTransactionResponse'
          description: ""
          headers:
            X-Network-Id:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - type: string
                - type: integer
              style: simple
            X-Node-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Chain-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Version:
              explode: false
              schema:
                pattern: ^\d+(\.\d+)*$
                type: string
              style: simple
        "404":
          description: '`contractId` or `transactionId` not found'
      security: []
      summary: Get contract transaction by ID
    put:
      description: "Submit a signed (Cardano) transaction that applies inputs to an\
        \ open Marlowe contract. The transaction must have originally been created\
        \ by the POST /contracts/{contractId}/transactions endpoint. This endpoint\
        \ will respond when the transaction is submitted successfully to the local\
        \ node, which means it will not wait for the transaction to be published in\
        \ a block. Use the GET /contracts/{contractId}/transactions/{transactionId}\
        \ endpoint to poll the on-chain status."
      operationId: submitContractTransaction
      parameters:
      - explode: false
        in: path
        name: contractId
        required: true
        schema:
          description: A reference to a transaction output with a transaction ID and
            index. The value must be URL encoded by replacing the '#' character with
            %23.
          example: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7%231
          pattern: "^[a-fA-F0-9]{64}%23[0-9]+$"
          type: string
        style: simple
      - explode: false
        in: path
        name: transactionId
        required: true
        schema:
          description: The hex-encoded identifier of a Cardano transaction
          pattern: "^[a-fA-F0-9]{64}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/TextEnvelope'
      responses:
        "202":
          content:
            application/json;charset=utf-8: {}
          description: ""
          headers:
            X-Network-Id:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - type: string
                - type: integer
              style: simple
            X-Node-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Chain-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Version:
              explode: false
              schema:
                pattern: ^\d+(\.\d+)*$
                type: string
              style: simple
        "400":
          description: Invalid `body`
        "404":
          description: '`contractId` or `transactionId` not found'
      security: []
      summary: Submit contract input application
  /healthcheck:
    get:
      description: Check if the server is running and ready to respond to requests.
      operationId: healthcheck
      responses:
        "200":
          content:
            application/json;charset=utf-8: {}
          description: ""
          headers:
            X-Network-Id:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - type: string
                - type: integer
              style: simple
            X-Node-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Chain-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Version:
              explode: false
              schema:
                pattern: ^\d+(\.\d+)*$
                type: string
              style: simple
      security: []
      summary: Test server status
  /payouts:
    get:
      description: "Get payouts to parties from role-based contracts. Results are\
        \ returned in pages, with paging being specified by request headers."
      operationId: getPayouts
      parameters:
      - explode: true
        in: query
        name: contractId
        required: false
        schema:
          items:
            description: A reference to a transaction output with a transaction ID
              and index. The value must be URL encoded by replacing the '#' character
              with %23.
            example: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7%231
            pattern: "^[a-fA-F0-9]{64}%23[0-9]+$"
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: roleToken
        required: false
        schema:
          items:
            description: A minting policy ID and a token name identifying a specific
              asset type. Encoded as policyId.tokenName.
            pattern: "^[a-fA-F0-9]*\\..*$"
            type: string
          type: array
        style: form
      - description: Whether to include available or withdrawn payouts in the results.
        explode: true
        in: query
        name: status
        required: false
        schema:
          description: "The status of a payout. Either it is available to be withdrawn,\
            \ or it has already been withdrawn."
          enum:
          - available
          - withdrawn
          type: string
        style: form
      - explode: false
        in: header
        name: Range
        required: false
        schema:
          type: string
        style: simple
      responses:
        "206":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetPayoutsResponse'
          description: ""
          headers:
            Accept-Ranges:
              explode: false
              schema:
                items:
                  enum:
                  - payoutId
                  type: string
                type: array
              style: simple
            Content-Range:
              explode: false
              schema:
                type: string
              style: simple
            Next-Range:
              explode: false
              schema:
                type: string
              style: simple
            Total-Count:
              explode: false
              schema:
                maximum: 9223372036854775807
                minimum: -9223372036854775808
                type: integer
              style: simple
            X-Network-Id:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - type: string
                - type: integer
              style: simple
            X-Node-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Chain-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Version:
              explode: false
              schema:
                pattern: ^\d+(\.\d+)*$
                type: string
              style: simple
        "400":
          description: Invalid `Range` or `status` or `roleToken` or `contractId`
      security: []
      summary: Get role payouts
  /payouts/{payoutId}:
    get:
      operationId: getPayoutById
      parameters:
      - explode: false
        in: path
        name: payoutId
        required: true
        schema:
          description: A reference to a transaction output with a transaction ID and
            index. The value must be URL encoded by replacing the '#' character with
            %23.
          example: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7%231
          pattern: "^[a-fA-F0-9]{64}%23[0-9]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetPayoutResponse'
          description: ""
          headers:
            X-Network-Id:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - type: string
                - type: integer
              style: simple
            X-Node-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Chain-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Version:
              explode: false
              schema:
                pattern: ^\d+(\.\d+)*$
                type: string
              style: simple
        "404":
          description: '`payoutId` not found'
      security: []
      summary: Get payout by ID
  /withdrawals:
    get:
      description: "Get published withdrawal transactions. Results are returned in\
        \ pages, with paging being specified by request headers."
      operationId: getWithdrawals
      parameters:
      - explode: true
        in: query
        name: roleCurrency
        required: false
        schema:
          items:
            description: The hex-encoded minting policy ID for a native Cardano token
            pattern: "^[a-fA-F0-9]*$"
            type: string
          type: array
        style: form
      - explode: false
        in: header
        name: Range
        required: false
        schema:
          type: string
        style: simple
      responses:
        "206":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetWithdrawalsResponse'
          description: ""
          headers:
            Accept-Ranges:
              explode: false
              schema:
                items:
                  enum:
                  - withdrawalId
                  type: string
                type: array
              style: simple
            Content-Range:
              explode: false
              schema:
                type: string
              style: simple
            Next-Range:
              explode: false
              schema:
                type: string
              style: simple
            Total-Count:
              explode: false
              schema:
                maximum: 9223372036854775807
                minimum: -9223372036854775808
                type: integer
              style: simple
            X-Network-Id:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - type: string
                - type: integer
              style: simple
            X-Node-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Chain-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Version:
              explode: false
              schema:
                pattern: ^\d+(\.\d+)*$
                type: string
              style: simple
        "400":
          description: Invalid `Range` or `roleCurrency`
      security: []
      summary: Get withdrawals
    post:
      description: "Build an unsigned (Cardano) transaction body which withdraws available\
        \ payouts from a role payout validator. This unsigned transaction must be\
        \ signed by a wallet (such as a CIP-30 or CIP-45 wallet) before being submitted.\
        \ To submit the signed transaction, use the PUT /withdrawals/{withdrawalId}\
        \ endpoint."
      operationId: withdrawPayouts
      parameters:
      - explode: false
        in: header
        name: X-Change-Address
        required: true
        schema:
          description: "A cardano address, in Bech32 format"
          example: addr1w94f8ywk4fg672xasahtk4t9k6w3aql943uxz5rt62d4dvq8evxaf
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Address
        required: false
        schema:
          description: A comma-separated list of values
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Collateral-UTxO
        required: false
        schema:
          description: A comma-separated list of values
          type: string
        style: simple
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/PostWithdrawalsRequest'
      responses:
        "201":
          content:
            application/vendor.iog.marlowe-runtime.withdraw-tx-json:
              schema:
                $ref: '#/components/schemas/WithdrawPayoutsResponse'
          description: ""
          headers:
            X-Network-Id:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - type: string
                - type: integer
              style: simple
            X-Node-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Chain-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Version:
              explode: false
              schema:
                pattern: ^\d+(\.\d+)*$
                type: string
              style: simple
        "400":
          description: Invalid `X-Collateral-UTxO` or `X-Address` or `X-Change-Address`
            or `body`
      security: []
      summary: Withdraw payouts
  /withdrawals/{withdrawalId}:
    get:
      operationId: getWithdrawalById
      parameters:
      - explode: false
        in: path
        name: withdrawalId
        required: true
        schema:
          description: The hex-encoded identifier of a Cardano transaction
          pattern: "^[a-fA-F0-9]{64}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Withdrawal'
          description: ""
          headers:
            X-Network-Id:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - type: string
                - type: integer
              style: simple
            X-Node-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Chain-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Version:
              explode: false
              schema:
                pattern: ^\d+(\.\d+)*$
                type: string
              style: simple
        "404":
          description: '`withdrawalId` not found'
      security: []
      summary: Get withdrawal by ID
    put:
      description: "Submit a signed (Cardano) transaction that withdraws available\
        \ payouts from a role payout validator. The transaction must have originally\
        \ been created by the POST /withdrawals endpoint. This endpoint will respond\
        \ when the transaction is submitted successfully to the local node, which\
        \ means it will not wait for the transaction to be published in a block. Use\
        \ the GET /withdrawals/{withdrawalId} endpoint to poll the on-chain status."
      operationId: submitWithdrawal
      parameters:
      - explode: false
        in: path
        name: withdrawalId
        required: true
        schema:
          description: The hex-encoded identifier of a Cardano transaction
          pattern: "^[a-fA-F0-9]{64}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/TextEnvelope'
      responses:
        "202":
          content:
            application/json;charset=utf-8: {}
          description: ""
          headers:
            X-Network-Id:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - type: string
                - type: integer
              style: simple
            X-Node-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Chain-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Tip:
              explode: false
              schema:
                description: The latest known point in the chain on a peer.
                oneOf:
                - properties:
                    genesisTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - genesisTimeUTC
                  type: object
                - properties:
                    blockHeader:
                      $ref: '#/components/schemas/BlockHeader'
                    slotTimeUTC:
                      format: yyyy-mm-ddThh:MM:ssZ
                      type: string
                  required:
                  - blockHeader
                  - slotTimeUTC
                  type: object
              style: simple
            X-Runtime-Version:
              explode: false
              schema:
                pattern: ^\d+(\.\d+)*$
                type: string
              style: simple
        "400":
          description: Invalid `body`
        "404":
          description: '`withdrawalId` not found'
      security: []
      summary: Submit payout withdrawal
components:
  schemas:
    AccountTokenTuple:
      items:
        $ref: '#/components/schemas/AccountTokenTuple_inner'
      maxItems: 2
      minItems: 2
      type: array
    Action:
      description: A contract which becomes active when an action occurs.
      oneOf:
      - $ref: '#/components/schemas/DepositAction'
      - $ref: '#/components/schemas/ChoiceAction'
      - $ref: '#/components/schemas/NotifyAction'
    ActionObject:
      description: A contract which becomes active when an action occurs.
      oneOf:
      - $ref: '#/components/schemas/DepositActionObject'
      - $ref: '#/components/schemas/ChoiceActionObject'
      - $ref: '#/components/schemas/NotifyActionObject'
      - $ref: '#/components/schemas/LabelRef'
    Add:
      properties:
        add:
          $ref: '#/components/schemas/Value'
        and:
          $ref: '#/components/schemas/Value'
      required:
      - add
      - and
      type: object
    AdditionalMetadata:
      additionalProperties:
        $ref: '#/components/schemas/Metadata'
      description: Object of metadata values
      type: object
    AdditionalRolesConfigProp:
      additionalProperties:
        $ref: '#/components/schemas/RoleTokenConfig'
      type: object
    AddObject:
      properties:
        add:
          $ref: '#/components/schemas/ValueObject'
        and:
          $ref: '#/components/schemas/ValueObject'
      required:
      - add
      - and
      type: object
    Address:
      description: "A cardano address, in Bech32 format"
      example: addr1w94f8ywk4fg672xasahtk4t9k6w3aql943uxz5rt62d4dvq8evxaf
      type: string
    AddressAndMetadata:
      properties:
        address:
          description: "A cardano address, in Bech32 format"
          example: addr1w94f8ywk4fg672xasahtk4t9k6w3aql943uxz5rt62d4dvq8evxaf
          type: string
        metadata:
          $ref: '#/components/schemas/TokenMetadata'
      required:
      - address
      type: object
    And:
      properties:
        and:
          $ref: '#/components/schemas/Observation'
        both:
          $ref: '#/components/schemas/Observation'
      required:
      - and
      - both
      type: object
    AndObject:
      properties:
        and:
          $ref: '#/components/schemas/ObservationObject'
        both:
          $ref: '#/components/schemas/ObservationObject'
      required:
      - and
      - both
      type: object
    ApplicableInputs:
      description: Applicable Inputs for a given contract
      example:
        choices:
        - for_choice:
            choice_name: choice_name
            choice_owner: null
          can_choose_between:
          - from: 0
            to: 6
          - from: 0
            to: 6
          case_index: 1
          is_merkleized_continuation: true
        - for_choice:
            choice_name: choice_name
            choice_owner: null
          can_choose_between:
          - from: 0
            to: 6
          - from: 0
            to: 6
          case_index: 1
          is_merkleized_continuation: true
        deposits:
        - of_token:
            currency_symbol: currency_symbol
            token_name: token_name
          into_account: null
          case_index: 5
          can_deposit: 5
          is_merkleized_continuation: true
          party: null
        - of_token:
            currency_symbol: currency_symbol
            token_name: token_name
          into_account: null
          case_index: 5
          can_deposit: 5
          is_merkleized_continuation: true
          party: null
        notify:
          case_index: 2
          is_merkleized_continuation: true
      properties:
        choices:
          items:
            $ref: '#/components/schemas/CanChoose'
          type: array
        deposits:
          items:
            $ref: '#/components/schemas/CanDeposit'
          type: array
        notify:
          $ref: '#/components/schemas/CanNotify'
      required:
      - choices
      - deposits
      type: object
    ApplyInputsResponse:
      properties:
        links:
          $ref: '#/components/schemas/ApplyInputsResponse_links'
        resource:
          $ref: '#/components/schemas/ApplyInputsTxEnvelope'
      required:
      - links
      - resource
      type: object
    ApplyInputsTxEnvelope:
      description: The "type" property of "tx" must be "Tx BabbageEra" or "Tx ConwayEra"
      properties:
        contractId:
          description: A reference to a transaction output with a transaction ID and
            index.
          example: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
          pattern: "^[a-fA-F0-9]{64}#[0-9]+$"
          type: string
        transactionId:
          description: The hex-encoded identifier of a Cardano transaction
          pattern: "^[a-fA-F0-9]{64}$"
          type: string
        tx:
          $ref: '#/components/schemas/TextEnvelope'
      required:
      - contractId
      - transactionId
      - tx
      type: object
    Assert:
      description: Check an observation and produce a warning if it is false.
      properties:
        assert:
          $ref: '#/components/schemas/Observation'
        then:
          $ref: '#/components/schemas/Contract'
      required:
      - assert
      - then
      type: object
    AssertFail:
      description: A semantics assertion failed.
      enum:
      - assertion_failed
      type: string
    AssertObject:
      description: Check an observation and produce a warning if it is false.
      properties:
        assert:
          $ref: '#/components/schemas/ObservationObject'
        then:
          $ref: '#/components/schemas/ContractObject'
      required:
      - assert
      - then
      type: object
    AssetId:
      example:
        policyId: policyId
        assetName: assetName
      properties:
        assetName:
          type: string
        policyId:
          description: The hex-encoded minting policy ID for a native Cardano token
          pattern: "^[a-fA-F0-9]*$"
          type: string
      required:
      - assetName
      - policyId
      type: object
    Assets:
      example:
        lovelace: 0
        tokens:
          key:
            key: 6
      properties:
        lovelace:
          type: integer
        tokens:
          additionalProperties:
            additionalProperties:
              type: integer
            type: object
          type: object
      required:
      - lovelace
      - tokens
      type: object
    BlockHeader:
      example:
        blockNo: 1477267267644620800
        blockHeaderHash: blockHeaderHash
        slotNo: 9223372036854775807
      properties:
        blockHeaderHash:
          type: string
        blockNo:
          format: int64
          maximum: 18446744073709552000
          minimum: 0
          type: integer
        slotNo:
          format: int64
          maximum: 18446744073709552000
          minimum: 0
          type: integer
      required:
      - blockHeaderHash
      - blockNo
      - slotNo
      type: object
    Bound:
      description: An inclusive range of values for a choice.
      example:
        from: 0
        to: 6
      properties:
        from:
          type: integer
        to:
          type: integer
      required:
      - from
      - to
      type: object
    CanChoose:
      description: Choice Inputs that can be applied for a given contract
      example:
        for_choice:
          choice_name: choice_name
          choice_owner: null
        can_choose_between:
        - from: 0
          to: 6
        - from: 0
          to: 6
        case_index: 1
        is_merkleized_continuation: true
      properties:
        can_choose_between:
          items:
            $ref: '#/components/schemas/Bound'
          type: array
        case_index:
          description: Index of a "Case Action" in a "When"
          type: integer
        for_choice:
          $ref: '#/components/schemas/ChoiceId'
        is_merkleized_continuation:
          description: Indicates if a given contract continuation is merkleized
          type: boolean
      required:
      - can_choose_between
      - case_index
      - for_choice
      - is_merkleized_continuation
      type: object
    CanDeposit:
      description: Deposit Input that can be applied for a given contract
      example:
        of_token:
          currency_symbol: currency_symbol
          token_name: token_name
        into_account: null
        case_index: 5
        can_deposit: 5
        is_merkleized_continuation: true
        party: null
      properties:
        can_deposit:
          type: integer
        case_index:
          description: Index of a "Case Action" in a "When"
          type: integer
        into_account:
          $ref: '#/components/schemas/Party'
        is_merkleized_continuation:
          description: Indicates if a given contract continuation is merkleized
          type: boolean
        of_token:
          $ref: '#/components/schemas/Token'
        party:
          $ref: '#/components/schemas/Party'
      required:
      - can_deposit
      - case_index
      - into_account
      - is_merkleized_continuation
      - of_token
      - party
      type: object
    CanNotify:
      description: Notify Input tha can be applied for a given contract
      example:
        case_index: 2
        is_merkleized_continuation: true
      properties:
        case_index:
          description: Index of a "Case Action" in a "When"
          type: integer
        is_merkleized_continuation:
          description: Indicates if a given contract continuation is merkleized
          type: boolean
      required:
      - case_index
      - is_merkleized_continuation
      type: object
    CanReduce:
      description: "Indicates if a given contract can be reduced (apply []) or not."
      type: boolean
    Case:
      description: A contract which becomes active when an action occurs.
      oneOf:
      - $ref: '#/components/schemas/CaseThen'
      - $ref: '#/components/schemas/CaseMerkleizedThen'
    CaseIndex:
      description: Index of a "Case Action" in a "When"
      type: integer
    CaseMerkleizedThen:
      properties:
        case:
          $ref: '#/components/schemas/Action'
        merkleized_then:
          type: string
      required:
      - case
      - merkleized_then
      type: object
    CaseMerkleizedThenObject:
      properties:
        case:
          $ref: '#/components/schemas/ActionObject'
        merkleized_then:
          type: string
      required:
      - case
      - merkleized_then
      type: object
    CaseObject:
      description: A contract which becomes active when an action occurs.
      oneOf:
      - $ref: '#/components/schemas/CaseThenObject'
      - $ref: '#/components/schemas/CaseMerkleizedThenObject'
    CaseThen:
      properties:
        case:
          $ref: '#/components/schemas/Action'
        then:
          $ref: '#/components/schemas/Contract'
      required:
      - case
      - then
      type: object
    CaseThenObject:
      properties:
        case:
          $ref: '#/components/schemas/ActionObject'
        then:
          $ref: '#/components/schemas/ContractObject'
      required:
      - case
      - then
      type: object
    ChoiceAction:
      properties:
        choose_between:
          items:
            $ref: '#/components/schemas/Bound'
          type: array
        for_choice:
          $ref: '#/components/schemas/ChoiceId'
      required:
      - choose_between
      - for_choice
      type: object
    ChoiceActionObject:
      properties:
        choose_between:
          items:
            $ref: '#/components/schemas/Bound'
          type: array
        for_choice:
          $ref: '#/components/schemas/ChoiceId'
      required:
      - choose_between
      - for_choice
      type: object
    ChoiceContinuationInput:
      description: Make a choice in a contract and provide the continuation of the
        contract
      properties:
        continuation_hash:
          type: string
        for_choice_id:
          $ref: '#/components/schemas/ChoiceId'
        input_that_chooses_num:
          type: integer
        merkleized_continuation:
          $ref: '#/components/schemas/Contract'
      required:
      - continuation_hash
      - for_choice_id
      - input_that_chooses_num
      - merkleized_continuation
      type: object
    ChoiceId:
      description: Refers to a party by role name.
      example:
        choice_name: choice_name
        choice_owner: null
      properties:
        choice_name:
          type: string
        choice_owner:
          $ref: '#/components/schemas/Party'
      required:
      - choice_name
      - choice_owner
      type: object
    ChoiceIdObject:
      description: Refers to a party by role name.
      properties:
        choice_name:
          type: string
        choice_owner:
          $ref: '#/components/schemas/PartyObject'
      required:
      - choice_name
      - choice_owner
      type: object
    ChoiceInput:
      description: Make a choice in a contract
      properties:
        for_choice_id:
          $ref: '#/components/schemas/ChoiceId'
        input_that_chooses_num:
          type: integer
      required:
      - for_choice_id
      - input_that_chooses_num
      type: object
    ChooseFor:
      properties:
        chose_something_for:
          $ref: '#/components/schemas/ChoiceId'
      required:
      - chose_something_for
      type: object
    ChooseForObject:
      properties:
        chose_something_for:
          $ref: '#/components/schemas/ChoiceIdObject'
      required:
      - chose_something_for
      type: object
    Close:
      description: No more payments will be sent and the balance of the contract is
        0.
      enum:
      - close
      type: string
    CloseObject:
      description: No more payments will be sent and the balance of the contract is
        0.
      enum:
      - close
      type: string
    ContinuationInput:
      description: Notify a contract to check a condition and provide the continuation
        of the contract
      properties:
        continuation_hash:
          type: string
        merkleized_continuation:
          $ref: '#/components/schemas/Contract'
      required:
      - continuation_hash
      - merkleized_continuation
      type: object
    Contract:
      description: Contract terms specified in Marlowe
      oneOf:
      - $ref: '#/components/schemas/Close'
      - $ref: '#/components/schemas/Pay'
      - $ref: '#/components/schemas/If'
      - $ref: '#/components/schemas/When'
      - $ref: '#/components/schemas/Let'
      - $ref: '#/components/schemas/Assert'
    ContractHeader:
      example:
        metadata:
          key: null
        continuations: continuations
        contractId: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
        block:
          blockNo: 1477267267644620800
          blockHeaderHash: blockHeaderHash
          slotNo: 9223372036854775807
        roleTokenMintingPolicyId: roleTokenMintingPolicyId
        version: null
        status: null
        tags:
          key: null
      properties:
        block:
          $ref: '#/components/schemas/BlockHeader'
        continuations:
          type: string
        contractId:
          description: A reference to a transaction output with a transaction ID and
            index.
          example: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
          pattern: "^[a-fA-F0-9]{64}#[0-9]+$"
          type: string
        metadata:
          additionalProperties:
            $ref: '#/components/schemas/Metadata'
          type: object
        roleTokenMintingPolicyId:
          description: The hex-encoded minting policy ID for a native Cardano token
          pattern: "^[a-fA-F0-9]*$"
          type: string
        status:
          $ref: '#/components/schemas/TxStatus'
        tags:
          additionalProperties:
            $ref: '#/components/schemas/Metadata'
          type: object
        version:
          $ref: '#/components/schemas/MarloweVersion'
      required:
      - contractId
      - metadata
      - roleTokenMintingPolicyId
      - status
      - tags
      - version
      type: object
    ContractObject:
      description: Contract terms specified in Marlowe
      oneOf:
      - $ref: '#/components/schemas/CloseObject'
      - $ref: '#/components/schemas/PayObject'
      - $ref: '#/components/schemas/IfObject'
      - $ref: '#/components/schemas/WhenObject'
      - $ref: '#/components/schemas/LetObject'
      - $ref: '#/components/schemas/AssertObject'
      - $ref: '#/components/schemas/LabelRef'
    ContractSourceId:
      description: The hex-encoded identifier of a Marlowe contract source
      pattern: "^[a-fA-F0-9]{64}$"
      type: string
    ContractSourceIds:
      example:
        results:
        - null
        - null
      properties:
        results:
          items:
            $ref: '#/components/schemas/ContractSourceId'
          type: array
      required:
      - results
      type: object
    ContractState:
      example:
        unclaimedPayouts:
        - assets:
            lovelace: 0
            tokens:
              key:
                key: 6
          role: role
          payoutId: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
        - assets:
            lovelace: 0
            tokens:
              key:
                key: 6
          role: role
          payoutId: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
        utxo: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
        initialContract: null
        metadata:
          key: null
        txBody:
          description: description
          type: type
          cborHex: cborHex
        currentContract: null
        version: null
        tags:
          key: null
        assets:
          lovelace: 0
          tokens:
            key:
              key: 6
        continuations: continuations
        contractId: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
        block:
          blockNo: 1477267267644620800
          blockHeaderHash: blockHeaderHash
          slotNo: 9223372036854775807
        state:
          boundValues:
          - - null
            - null
          - - null
            - null
          minTime: 1
          accounts:
          - - null
            - null
          - - null
            - null
          choices:
          - - null
            - null
          - - null
            - null
        roleTokenMintingPolicyId: roleTokenMintingPolicyId
        status: null
      properties:
        assets:
          $ref: '#/components/schemas/Assets'
        block:
          $ref: '#/components/schemas/BlockHeader'
        continuations:
          type: string
        contractId:
          description: A reference to a transaction output with a transaction ID and
            index.
          example: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
          pattern: "^[a-fA-F0-9]{64}#[0-9]+$"
          type: string
        currentContract:
          $ref: '#/components/schemas/Contract'
        initialContract:
          $ref: '#/components/schemas/Contract'
        metadata:
          additionalProperties:
            $ref: '#/components/schemas/Metadata'
          type: object
        roleTokenMintingPolicyId:
          description: The hex-encoded minting policy ID for a native Cardano token
          pattern: "^[a-fA-F0-9]*$"
          type: string
        state:
          $ref: '#/components/schemas/MarloweState'
        status:
          $ref: '#/components/schemas/TxStatus'
        tags:
          additionalProperties:
            $ref: '#/components/schemas/Metadata'
          type: object
        txBody:
          $ref: '#/components/schemas/TextEnvelope'
        unclaimedPayouts:
          items:
            $ref: '#/components/schemas/Payout'
          type: array
        utxo:
          description: A reference to a transaction output with a transaction ID and
            index.
          example: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
          pattern: "^[a-fA-F0-9]{64}#[0-9]+$"
          type: string
        version:
          $ref: '#/components/schemas/MarloweVersion'
      required:
      - assets
      - contractId
      - initialContract
      - metadata
      - roleTokenMintingPolicyId
      - status
      - tags
      - unclaimedPayouts
      - version
      type: object
    CreateContractResponse:
      properties:
        links:
          $ref: '#/components/schemas/CreateContractResponse_links'
        resource:
          $ref: '#/components/schemas/CreateTxEnvelope'
      required:
      - links
      - resource
      type: object
    CreateTxBodyEnvelope:
      description: The "type" property of "txBody" must be "TxBody BabbageEra" or
        "TxBody ConwayEra"
      properties:
        contractId:
          description: A reference to a transaction output with a transaction ID and
            index.
          example: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
          pattern: "^[a-fA-F0-9]{64}#[0-9]+$"
          type: string
        safetyErrors:
          items:
            $ref: '#/components/schemas/SafetyError'
          type: array
        txBody:
          $ref: '#/components/schemas/TextEnvelope'
      required:
      - contractId
      - txBody
      type: object
    CreateTxEnvelope:
      description: The "type" property of "tx" must be "Tx BabbageEra" or "Tx ConwayEra"
      properties:
        contractId:
          description: A reference to a transaction output with a transaction ID and
            index.
          example: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
          pattern: "^[a-fA-F0-9]{64}#[0-9]+$"
          type: string
        safetyErrors:
          items:
            $ref: '#/components/schemas/SafetyError'
          type: array
        tx:
          $ref: '#/components/schemas/TextEnvelope'
      required:
      - contractId
      - tx
      type: object
    DepositAction:
      properties:
        deposits:
          $ref: '#/components/schemas/Value'
        into_account:
          $ref: '#/components/schemas/Party'
        of_token:
          $ref: '#/components/schemas/Token'
        party:
          $ref: '#/components/schemas/Party'
      required:
      - deposits
      - into_account
      - of_token
      - party
      type: object
    DepositActionObject:
      properties:
        deposits:
          $ref: '#/components/schemas/Value'
        into_account:
          $ref: '#/components/schemas/Party'
        of_token:
          $ref: '#/components/schemas/Token'
        party:
          $ref: '#/components/schemas/Party'
      required:
      - deposits
      - into_account
      - of_token
      - party
      type: object
    DepositContinuationInput:
      description: Deposit funds into an account in a contract and provide the continuation
        of the contract
      properties:
        continuation_hash:
          type: string
        input_from_party:
          $ref: '#/components/schemas/Party'
        into_account:
          $ref: '#/components/schemas/Party'
        merkleized_continuation:
          $ref: '#/components/schemas/Contract'
        of_token:
          $ref: '#/components/schemas/Token'
        that_deposits:
          type: integer
      required:
      - continuation_hash
      - input_from_party
      - into_account
      - merkleized_continuation
      - of_token
      - that_deposits
      type: object
    DepositInput:
      description: Deposit funds into an account in a contract
      properties:
        input_from_party:
          $ref: '#/components/schemas/Party'
        into_account:
          $ref: '#/components/schemas/Party'
        of_token:
          $ref: '#/components/schemas/Token'
        that_deposits:
          type: integer
      required:
      - input_from_party
      - into_account
      - of_token
      - that_deposits
      type: object
    Divide:
      properties:
        by:
          $ref: '#/components/schemas/Value'
        divide:
          $ref: '#/components/schemas/Value'
      required:
      - by
      - divide
      type: object
    DivideObject:
      properties:
        by:
          $ref: '#/components/schemas/ValueObject'
        divide:
          $ref: '#/components/schemas/ValueObject'
      required:
      - by
      - divide
      type: object
    Equal:
      properties:
        equal_to:
          $ref: '#/components/schemas/Value'
        value:
          $ref: '#/components/schemas/Value'
      required:
      - equal_to
      - value
      type: object
    EqualObject:
      properties:
        equal_to:
          $ref: '#/components/schemas/ValueObject'
        value:
          $ref: '#/components/schemas/ValueObject'
      required:
      - equal_to
      - value
      type: object
    ExBudget:
      example:
        exBudgetCPU: 10
        exBudgetMemory: 10
      properties:
        exBudgetCPU:
          type: number
        exBudgetMemory:
          type: number
      required:
      - exBudgetCPU
      - exBudgetMemory
      type: object
    GetContractResponse:
      example:
        resource:
          unclaimedPayouts:
          - assets:
              lovelace: 0
              tokens:
                key:
                  key: 6
            role: role
            payoutId: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
          - assets:
              lovelace: 0
              tokens:
                key:
                  key: 6
            role: role
            payoutId: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
          utxo: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
          initialContract: null
          metadata:
            key: null
          txBody:
            description: description
            type: type
            cborHex: cborHex
          currentContract: null
          version: null
          tags:
            key: null
          assets:
            lovelace: 0
            tokens:
              key:
                key: 6
          continuations: continuations
          contractId: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
          block:
            blockNo: 1477267267644620800
            blockHeaderHash: blockHeaderHash
            slotNo: 9223372036854775807
          state:
            boundValues:
            - - null
              - null
            - - null
              - null
            minTime: 1
            accounts:
            - - null
              - null
            - - null
              - null
            choices:
            - - null
              - null
            - - null
              - null
          roleTokenMintingPolicyId: roleTokenMintingPolicyId
          status: null
        links:
          transactions: transactions
      properties:
        links:
          $ref: '#/components/schemas/GetContractResponse_links'
        resource:
          $ref: '#/components/schemas/ContractState'
      required:
      - links
      - resource
      type: object
    GetContractsResponse:
      example:
        results:
        - resource:
            metadata:
              key: null
            continuations: continuations
            contractId: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
            block:
              blockNo: 1477267267644620800
              blockHeaderHash: blockHeaderHash
              slotNo: 9223372036854775807
            roleTokenMintingPolicyId: roleTokenMintingPolicyId
            version: null
            status: null
            tags:
              key: null
          links:
            contract: contract
            transactions: transactions
        - resource:
            metadata:
              key: null
            continuations: continuations
            contractId: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
            block:
              blockNo: 1477267267644620800
              blockHeaderHash: blockHeaderHash
              slotNo: 9223372036854775807
            roleTokenMintingPolicyId: roleTokenMintingPolicyId
            version: null
            status: null
            tags:
              key: null
          links:
            contract: contract
            transactions: transactions
      properties:
        results:
          items:
            $ref: '#/components/schemas/GetContractsResponse_results_inner'
          type: array
      required:
      - results
      type: object
    GetPayoutResponse:
      example:
        resource:
          withdrawalId: withdrawalId
          assets:
            lovelace: 0
            tokens:
              key:
                key: 6
          role:
            policyId: policyId
            assetName: assetName
          contractId: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
          payoutValidatorAddress: addr1w94f8ywk4fg672xasahtk4t9k6w3aql943uxz5rt62d4dvq8evxaf
          payoutId: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
          status: null
        links:
          contract: contract
          withdrawal: withdrawal
          transaction: transaction
      properties:
        links:
          $ref: '#/components/schemas/GetPayoutResponse_links'
        resource:
          $ref: '#/components/schemas/PayoutState'
      required:
      - links
      - resource
      type: object
    GetPayoutsResponse:
      example:
        results:
        - resource:
            withdrawalId: withdrawalId
            role:
              policyId: policyId
              assetName: assetName
            contractId: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
            payoutId: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
            status: null
          links:
            payout: payout
        - resource:
            withdrawalId: withdrawalId
            role:
              policyId: policyId
              assetName: assetName
            contractId: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
            payoutId: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
            status: null
          links:
            payout: payout
      properties:
        results:
          items:
            $ref: '#/components/schemas/GetPayoutsResponse_results_inner'
          type: array
      required:
      - results
      type: object
    GetTransactionResponse:
      example:
        resource:
          metadata:
            key: null
          outputState:
            boundValues:
            - - null
              - null
            - - null
              - null
            minTime: 1
            accounts:
            - - null
              - null
            - - null
              - null
            choices:
            - - null
              - null
            - - null
              - null
          outputUtxo: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
          inputs:
          - null
          - null
          outputContract: null
          txBody:
            description: description
            type: type
            cborHex: cborHex
          transactionId: transactionId
          invalidBefore: 2016-07-22T00:00:00Z
          tags:
            key: null
          payouts:
          - assets:
              lovelace: 0
              tokens:
                key:
                  key: 6
            role: role
            payoutId: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
          - assets:
              lovelace: 0
              tokens:
                key:
                  key: 6
            role: role
            payoutId: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
          consumingTx: consumingTx
          assets:
            lovelace: 0
            tokens:
              key:
                key: 6
          continuations: continuations
          contractId: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
          block:
            blockNo: 1477267267644620800
            blockHeaderHash: blockHeaderHash
            slotNo: 9223372036854775807
          invalidHereafter: 2016-07-22T00:00:00Z
          inputUtxo: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
          status: null
        links:
          next: next
          previous: previous
      properties:
        links:
          $ref: '#/components/schemas/GetTransactionResponse_links'
        resource:
          $ref: '#/components/schemas/Tx'
      required:
      - links
      - resource
      type: object
    GetTransactionsResponse:
      example:
        results:
        - resource:
            utxo: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
            metadata:
              key: null
            continuations: continuations
            contractId: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
            block:
              blockNo: 1477267267644620800
              blockHeaderHash: blockHeaderHash
              slotNo: 9223372036854775807
            transactionId: transactionId
            status: null
            tags:
              key: null
          links:
            transaction: transaction
        - resource:
            utxo: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
            metadata:
              key: null
            continuations: continuations
            contractId: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
            block:
              blockNo: 1477267267644620800
              blockHeaderHash: blockHeaderHash
              slotNo: 9223372036854775807
            transactionId: transactionId
            status: null
            tags:
              key: null
          links:
            transaction: transaction
      properties:
        results:
          items:
            $ref: '#/components/schemas/GetTransactionsResponse_results_inner'
          type: array
      required:
      - results
      type: object
    GetWithdrawalsResponse:
      example:
        results:
        - resource:
            withdrawalId: withdrawalId
            block:
              blockNo: 1477267267644620800
              blockHeaderHash: blockHeaderHash
              slotNo: 9223372036854775807
            status: null
          links:
            withdrawal: withdrawal
        - resource:
            withdrawalId: withdrawalId
            block:
              blockNo: 1477267267644620800
              blockHeaderHash: blockHeaderHash
              slotNo: 9223372036854775807
            status: null
          links:
            withdrawal: withdrawal
      properties:
        results:
          items:
            $ref: '#/components/schemas/GetWithdrawalsResponse_results_inner'
          type: array
      required:
      - results
      type: object
    Greater:
      properties:
        gt:
          $ref: '#/components/schemas/Value'
        value:
          $ref: '#/components/schemas/Value'
      required:
      - gt
      - value
      type: object
    GreaterObject:
      properties:
        gt:
          $ref: '#/components/schemas/ValueObject'
        value:
          $ref: '#/components/schemas/ValueObject'
      required:
      - gt
      - value
      type: object
    GreaterOrEqual:
      properties:
        ge_than:
          $ref: '#/components/schemas/Value'
        value:
          $ref: '#/components/schemas/Value'
      required:
      - ge_than
      - value
      type: object
    GreaterOrEqualObject:
      properties:
        ge_than:
          $ref: '#/components/schemas/ValueObject'
        value:
          $ref: '#/components/schemas/ValueObject'
      required:
      - ge_than
      - value
      type: object
    HexMetadata:
      description: Hex-encoded binary data of up to 64 bytes
      pattern: "0x[A-Fa-f0-9]{0,128}"
      type: string
    If:
      description: "If an observation is true, the first contract applies, otherwise\
        \ the second contract applies."
      properties:
        else:
          $ref: '#/components/schemas/Contract'
        if:
          $ref: '#/components/schemas/Observation'
        then:
          $ref: '#/components/schemas/Contract'
      required:
      - else
      - if
      - then
      type: object
    IfObject:
      description: "If an observation is true, the first contract applies, otherwise\
        \ the second contract applies."
      properties:
        else:
          $ref: '#/components/schemas/ContractObject'
        if:
          $ref: '#/components/schemas/ObservationObject'
        then:
          $ref: '#/components/schemas/ContractObject'
      required:
      - else
      - if
      - then
      type: object
    IfValue:
      properties:
        else:
          $ref: '#/components/schemas/Value'
        if:
          $ref: '#/components/schemas/Observation'
        then:
          $ref: '#/components/schemas/Value'
      required:
      - else
      - if
      - then
      type: object
    IfValueObject:
      properties:
        else:
          $ref: '#/components/schemas/ValueObject'
        if:
          $ref: '#/components/schemas/ObservationObject'
        then:
          $ref: '#/components/schemas/ValueObject'
      required:
      - else
      - if
      - then
      type: object
    Input:
      description: An input to a Marlowe transaction
      oneOf:
      - $ref: '#/components/schemas/ContinuationInput'
      - $ref: '#/components/schemas/NotifyInput'
      - $ref: '#/components/schemas/ChoiceContinuationInput'
      - $ref: '#/components/schemas/ChoiceInput'
      - $ref: '#/components/schemas/DepositInput'
      - $ref: '#/components/schemas/DepositContinuationInput'
    IntervalError:
      description: A Marlowe transaction interval error.
      oneOf:
      - $ref: '#/components/schemas/InvalidInterval'
      - $ref: '#/components/schemas/IntervalInPast'
    IntervalInPast:
      description: Marlowe transaction interval in past.
      properties:
        intervalInPastError:
          $ref: '#/components/schemas/IntervalInPast_intervalInPastError'
      required:
      - intervalInPastError
      type: object
    InvalidInterval:
      description: Invalid Marlowe transaction interval.
      properties:
        invalidInterval:
          $ref: '#/components/schemas/InvalidInterval_invalidInterval'
      required:
      - invalidInterval
      type: object
    IsMerkleizedContinuation:
      description: Indicates if a given contract continuation is merkleized
      type: boolean
    Label:
      description: An arbitrary text identifier for an object in a Marlowe object
        bundle.
      type: string
    LabelledObject:
      description: A bundle of labelled Marlowe objects in define-before-use order.
      example:
        label: label
        type: value
        value: null
      properties:
        label:
          description: An arbitrary text identifier for an object in a Marlowe object
            bundle.
          type: string
        type:
          enum:
          - value
          - observation
          - contract
          - party
          - token
          - action
          type: string
        value:
          $ref: '#/components/schemas/LabelledObject_value'
      required:
      - label
      - type
      - value
      type: object
    LabelRef:
      properties:
        ref:
          description: An arbitrary text identifier for an object in a Marlowe object
            bundle.
          type: string
      required:
      - ref
      type: object
    Lesser:
      properties:
        lt:
          $ref: '#/components/schemas/Value'
        value:
          $ref: '#/components/schemas/Value'
      required:
      - lt
      - value
      type: object
    LesserObject:
      properties:
        lt:
          $ref: '#/components/schemas/ValueObject'
        value:
          $ref: '#/components/schemas/ValueObject'
      required:
      - lt
      - value
      type: object
    LesserOrEqual:
      properties:
        le_than:
          $ref: '#/components/schemas/Value'
        value:
          $ref: '#/components/schemas/Value'
      required:
      - le_than
      - value
      type: object
    LesserOrEqualObject:
      properties:
        le_than:
          $ref: '#/components/schemas/ValueObject'
        value:
          $ref: '#/components/schemas/ValueObject'
      required:
      - le_than
      - value
      type: object
    Let:
      description: Bind a value to a name within the scope of a sub-contract.
      properties:
        be:
          $ref: '#/components/schemas/Value'
        let:
          type: string
        then:
          $ref: '#/components/schemas/Contract'
      required:
      - be
      - let
      - then
      type: object
    LetObject:
      description: Bind a value to a name within the scope of a sub-contract.
      properties:
        be:
          $ref: '#/components/schemas/ValueObject'
        let:
          type: string
        then:
          $ref: '#/components/schemas/ContractObject'
      required:
      - be
      - let
      - then
      type: object
    MarloweState:
      description: The on-chain state of a Marlowe contract.
      example:
        boundValues:
        - - null
          - null
        - - null
          - null
        minTime: 1
        accounts:
        - - null
          - null
        - - null
          - null
        choices:
        - - null
          - null
        - - null
          - null
      properties:
        accounts:
          items:
            items:
              $ref: '#/components/schemas/MarloweState_accounts_inner_inner'
            maxItems: 2
            minItems: 2
            type: array
          type: array
        boundValues:
          items:
            items:
              $ref: '#/components/schemas/MarloweState_boundValues_inner_inner'
            maxItems: 2
            minItems: 2
            type: array
          type: array
        choices:
          items:
            items:
              $ref: '#/components/schemas/MarloweState_choices_inner_inner'
            maxItems: 2
            minItems: 2
            type: array
          type: array
        minTime:
          format: int64
          type: integer
      required:
      - accounts
      - boundValues
      - choices
      - minTime
      type: object
    MarloweVersion:
      description: A version of the Marlowe language.
      enum:
      - v1
      type: string
    Metadata:
      description: Arbitrary JSON-encoded transaction metadata
      oneOf:
      - type: integer
      - $ref: '#/components/schemas/HexMetadata'
      - $ref: '#/components/schemas/TextMetadata'
      - $ref: '#/components/schemas/MetadataArray'
      - $ref: '#/components/schemas/AdditionalMetadata'
    MetadataAndRecipients:
      properties:
        metadata:
          $ref: '#/components/schemas/TokenMetadata'
        recipients:
          additionalProperties:
            format: int64
            maximum: 18446744073709552000
            minimum: 0
            type: integer
          type: object
      required:
      - recipients
      type: object
    MetadataAndScript:
      properties:
        metadata:
          $ref: '#/components/schemas/TokenMetadata'
        script:
          description: The type of script receiving the role token.
          enum:
          - OpenRole
          type: string
      required:
      - script
      type: object
    MetadataArray:
      description: Array of metadata values
      items:
        $ref: '#/components/schemas/Metadata'
      type: array
    Minus:
      properties:
        minus:
          $ref: '#/components/schemas/Value'
        value:
          $ref: '#/components/schemas/Value'
      required:
      - minus
      - value
      type: object
    MinusObject:
      properties:
        minus:
          $ref: '#/components/schemas/ValueObject'
        value:
          $ref: '#/components/schemas/ValueObject'
      required:
      - minus
      - value
      type: object
    Multiply:
      properties:
        multiply:
          $ref: '#/components/schemas/Value'
        times:
          $ref: '#/components/schemas/Value'
      required:
      - multiply
      - times
      type: object
    MultiplyObject:
      properties:
        multiply:
          $ref: '#/components/schemas/ValueObject'
        times:
          $ref: '#/components/schemas/ValueObject'
      required:
      - multiply
      - times
      type: object
    Negate:
      properties:
        negate:
          $ref: '#/components/schemas/Value'
      required:
      - negate
      type: object
    NegateObject:
      properties:
        negate:
          $ref: '#/components/schemas/ValueObject'
      required:
      - negate
      type: object
    Next:
      description: Describe the reducibility (Can be Reduced ?) and the applicability
        (Can Inputs be Applied ?) for a given contract.
      example:
        applicable_inputs:
          choices:
          - for_choice:
              choice_name: choice_name
              choice_owner: null
            can_choose_between:
            - from: 0
              to: 6
            - from: 0
              to: 6
            case_index: 1
            is_merkleized_continuation: true
          - for_choice:
              choice_name: choice_name
              choice_owner: null
            can_choose_between:
            - from: 0
              to: 6
            - from: 0
              to: 6
            case_index: 1
            is_merkleized_continuation: true
          deposits:
          - of_token:
              currency_symbol: currency_symbol
              token_name: token_name
            into_account: null
            case_index: 5
            can_deposit: 5
            is_merkleized_continuation: true
            party: null
          - of_token:
              currency_symbol: currency_symbol
              token_name: token_name
            into_account: null
            case_index: 5
            can_deposit: 5
            is_merkleized_continuation: true
            party: null
          notify:
            case_index: 2
            is_merkleized_continuation: true
        can_reduce: true
      properties:
        applicable_inputs:
          $ref: '#/components/schemas/ApplicableInputs'
        can_reduce:
          description: "Indicates if a given contract can be reduced (apply []) or\
            \ not."
          type: boolean
      required:
      - applicable_inputs
      - can_reduce
      type: object
    NonPositiveDeposit:
      description: A warning for a non-positive deposit.
      properties:
        asked_to_deposit:
          type: integer
        in_account:
          $ref: '#/components/schemas/Party'
        of_token:
          $ref: '#/components/schemas/Token'
        party:
          $ref: '#/components/schemas/Party'
      required:
      - asked_to_deposit
      - in_account
      - of_token
      - party
      type: object
    NonPositivePayment:
      description: A warning for a non-positive payment.
      properties:
        account:
          $ref: '#/components/schemas/Party'
        asked_to_pay:
          type: integer
        of_token:
          $ref: '#/components/schemas/Token'
        to_payee:
          $ref: '#/components/schemas/Payee'
      required:
      - account
      - asked_to_pay
      - of_token
      - to_payee
      type: object
    Not:
      properties:
        not:
          $ref: '#/components/schemas/Observation'
      required:
      - not
      type: object
    NotifyAction:
      properties:
        notify_if:
          $ref: '#/components/schemas/Observation'
      required:
      - notify_if
      type: object
    NotifyActionObject:
      properties:
        notify_if:
          $ref: '#/components/schemas/Observation'
      required:
      - notify_if
      type: object
    NotifyInput:
      description: Notify a contract to check a condition
      enum:
      - input_notify
      type: string
    NotObject:
      properties:
        not:
          $ref: '#/components/schemas/ObservationObject'
      required:
      - not
      type: object
    ObjectBundle:
      description: A bundle of labelled Marlowe objects in define-before-use order.
      items:
        $ref: '#/components/schemas/LabelledObject'
      type: array
    Observation:
      description: A time-varying expression that evaluates to an integer
      oneOf:
      - type: boolean
      - $ref: '#/components/schemas/And'
      - $ref: '#/components/schemas/Or'
      - $ref: '#/components/schemas/Not'
      - $ref: '#/components/schemas/ChooseFor'
      - $ref: '#/components/schemas/GreaterOrEqual'
      - $ref: '#/components/schemas/Greater'
      - $ref: '#/components/schemas/Lesser'
      - $ref: '#/components/schemas/LesserOrEqual'
      - $ref: '#/components/schemas/Equal'
    ObservationObject:
      description: A time-varying expression that evaluates to an integer
      oneOf:
      - type: boolean
      - $ref: '#/components/schemas/AndObject'
      - $ref: '#/components/schemas/OrObject'
      - $ref: '#/components/schemas/NotObject'
      - $ref: '#/components/schemas/ChooseForObject'
      - $ref: '#/components/schemas/GreaterOrEqualObject'
      - $ref: '#/components/schemas/GreaterObject'
      - $ref: '#/components/schemas/LesserObject'
      - $ref: '#/components/schemas/LesserOrEqualObject'
      - $ref: '#/components/schemas/EqualObject'
      - $ref: '#/components/schemas/LabelRef'
    Or:
      properties:
        either:
          $ref: '#/components/schemas/Observation'
        or:
          $ref: '#/components/schemas/Observation'
      required:
      - either
      - or
      type: object
    OrObject:
      properties:
        either:
          $ref: '#/components/schemas/ObservationObject'
        or:
          $ref: '#/components/schemas/ObservationObject'
      required:
      - either
      - or
      type: object
    PartialPayment:
      description: A warning for partial payment.
      properties:
        account:
          $ref: '#/components/schemas/Party'
        asked_to_pay:
          type: integer
        but_only_paid:
          type: integer
        of_token:
          $ref: '#/components/schemas/Token'
        to_payee:
          $ref: '#/components/schemas/Payee'
      required:
      - account
      - asked_to_pay
      - but_only_paid
      - of_token
      - to_payee
      type: object
    Party:
      description: A participant in a contract
      oneOf:
      - $ref: '#/components/schemas/PartyRoleName'
      - $ref: '#/components/schemas/PartyAddress'
    PartyAddress:
      description: Refers to a party by Cardano address.
      properties:
        address:
          description: "A cardano address, in Bech32 format"
          example: addr1w94f8ywk4fg672xasahtk4t9k6w3aql943uxz5rt62d4dvq8evxaf
          type: string
      required:
      - address
      type: object
    PartyObject:
      description: A participant in a contract
      oneOf:
      - $ref: '#/components/schemas/PartyRoleName'
      - $ref: '#/components/schemas/PartyAddress'
      - $ref: '#/components/schemas/LabelRef'
    PartyRoleName:
      description: Refers to a party by role name.
      properties:
        role_token:
          type: string
      required:
      - role_token
      type: object
    Pay:
      description: A payment will be sent from an account to a payee.
      properties:
        from_account:
          $ref: '#/components/schemas/Party'
        pay:
          $ref: '#/components/schemas/Value'
        then:
          $ref: '#/components/schemas/Contract'
        to:
          $ref: '#/components/schemas/Payee'
        token:
          $ref: '#/components/schemas/Token'
      required:
      - from_account
      - pay
      - then
      - to
      - token
      type: object
    Payee:
      description: A recipient of a payment
      oneOf:
      - $ref: '#/components/schemas/PayToAccount'
      - $ref: '#/components/schemas/PayToParty'
    PayeeObject:
      description: A recipient of a payment
      oneOf:
      - $ref: '#/components/schemas/PayToAccountObject'
      - $ref: '#/components/schemas/PayToPartyObject'
    Payment:
      description: A Marlowe payment.
      properties:
        amount:
          type: integer
        payment_from:
          $ref: '#/components/schemas/Party'
        to:
          $ref: '#/components/schemas/Payee'
        token:
          $ref: '#/components/schemas/Token'
      required:
      - amount
      - payment_from
      - to
      - token
    PayObject:
      description: A payment will be sent from an account to a payee.
      properties:
        from_account:
          $ref: '#/components/schemas/PartyObject'
        pay:
          $ref: '#/components/schemas/ValueObject'
        then:
          $ref: '#/components/schemas/ContractObject'
        to:
          $ref: '#/components/schemas/PayeeObject'
        token:
          $ref: '#/components/schemas/TokenObject'
      required:
      - from_account
      - pay
      - then
      - to
      - token
      type: object
    Payout:
      example:
        assets:
          lovelace: 0
          tokens:
            key:
              key: 6
        role: role
        payoutId: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
      properties:
        assets:
          $ref: '#/components/schemas/Assets'
        payoutId:
          description: A reference to a transaction output with a transaction ID and
            index.
          example: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
          pattern: "^[a-fA-F0-9]{64}#[0-9]+$"
          type: string
        role:
          type: string
      required:
      - assets
      - payoutId
      - role
      type: object
    PayoutHeader:
      example:
        withdrawalId: withdrawalId
        role:
          policyId: policyId
          assetName: assetName
        contractId: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
        payoutId: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
        status: null
      properties:
        contractId:
          description: A reference to a transaction output with a transaction ID and
            index.
          example: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
          pattern: "^[a-fA-F0-9]{64}#[0-9]+$"
          type: string
        payoutId:
          description: A reference to a transaction output with a transaction ID and
            index.
          example: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
          pattern: "^[a-fA-F0-9]{64}#[0-9]+$"
          type: string
        role:
          $ref: '#/components/schemas/AssetId'
        status:
          $ref: '#/components/schemas/PayoutStatus'
        withdrawalId:
          description: The hex-encoded identifier of a Cardano transaction
          pattern: "^[a-fA-F0-9]{64}$"
          type: string
      required:
      - contractId
      - payoutId
      - role
      - status
      type: object
    PayoutState:
      example:
        withdrawalId: withdrawalId
        assets:
          lovelace: 0
          tokens:
            key:
              key: 6
        role:
          policyId: policyId
          assetName: assetName
        contractId: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
        payoutValidatorAddress: addr1w94f8ywk4fg672xasahtk4t9k6w3aql943uxz5rt62d4dvq8evxaf
        payoutId: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
        status: null
      properties:
        assets:
          $ref: '#/components/schemas/Assets'
        contractId:
          description: A reference to a transaction output with a transaction ID and
            index.
          example: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
          pattern: "^[a-fA-F0-9]{64}#[0-9]+$"
          type: string
        payoutId:
          description: A reference to a transaction output with a transaction ID and
            index.
          example: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
          pattern: "^[a-fA-F0-9]{64}#[0-9]+$"
          type: string
        payoutValidatorAddress:
          description: "A cardano address, in Bech32 format"
          example: addr1w94f8ywk4fg672xasahtk4t9k6w3aql943uxz5rt62d4dvq8evxaf
          type: string
        role:
          $ref: '#/components/schemas/AssetId'
        status:
          $ref: '#/components/schemas/PayoutStatus'
        withdrawalId:
          description: The hex-encoded identifier of a Cardano transaction
          pattern: "^[a-fA-F0-9]{64}$"
          type: string
      required:
      - assets
      - contractId
      - payoutId
      - payoutValidatorAddress
      - role
      - status
      type: object
    PayoutStatus:
      description: "The status of a payout. Either it is available to be withdrawn,\
        \ or it has already been withdrawn."
      enum:
      - available
      - withdrawn
      type: string
    PayToAccount:
      description: Pays funds into a party's account in the contract.
      properties:
        account:
          $ref: '#/components/schemas/Party'
      required:
      - account
      type: object
    PayToAccountObject:
      description: Pays funds into a party's account in the contract.
      properties:
        account:
          $ref: '#/components/schemas/PartyObject'
      required:
      - account
      type: object
    PayToParty:
      description: Pays funds to a party.
      properties:
        party:
          $ref: '#/components/schemas/Party'
      required:
      - party
      type: object
    PayToPartyObject:
      description: Pays funds to a party.
      properties:
        party:
          $ref: '#/components/schemas/PartyObject'
      required:
      - party
      type: object
    Plutus.Address:
      description: A Plutus address.
      properties:
        addressCredential:
          $ref: '#/components/schemas/Plutus.Credential'
        addressStakingCredential:
          $ref: '#/components/schemas/Plutus.StakingCredential'
      required:
      - addressCredential
    Plutus.Credential:
      description: A Plutus credential.
      oneOf:
      - $ref: '#/components/schemas/PubKeyCredential'
      - $ref: '#/components/schemas/ScriptCredential'
    Plutus.StakingCredential:
      description: A Plutus staking credential.
      oneOf:
      - $ref: '#/components/schemas/StakingHash'
      - $ref: '#/components/schemas/StakingPointer'
    PolicyId:
      description: The hex-encoded minting policy ID for a native Cardano token
      pattern: "^[a-fA-F0-9]*$"
      type: string
    PostContractSourceResponse:
      example:
        intermediateIds:
          key: null
        contractSourceId: contractSourceId
      properties:
        contractSourceId:
          description: The hex-encoded identifier of a Marlowe contract source
          pattern: "^[a-fA-F0-9]{64}$"
          type: string
        intermediateIds:
          additionalProperties:
            $ref: '#/components/schemas/ContractSourceId'
          type: object
      required:
      - contractSourceId
      - intermediateIds
      type: object
    PostContractsRequest:
      example:
        threadTokenName: threadTokenName
        metadata:
          key: null
        contract: null
        roles: null
        minUTxODeposit: 1477267267644620800
        version: null
        tags:
          key: null
      properties:
        contract:
          $ref: '#/components/schemas/PostContractsRequest_contract'
        metadata:
          additionalProperties:
            $ref: '#/components/schemas/Metadata'
          type: object
        minUTxODeposit:
          format: int64
          maximum: 18446744073709552000
          minimum: 0
          type: integer
        roles:
          $ref: '#/components/schemas/RolesConfig'
        tags:
          additionalProperties:
            $ref: '#/components/schemas/Metadata'
          type: object
        threadTokenName:
          type: string
        version:
          $ref: '#/components/schemas/MarloweVersion'
      required:
      - contract
      - metadata
      - tags
      - version
      type: object
    PostTransactionsRequest:
      example:
        metadata:
          key: null
        inputs:
        - null
        - null
        invalidHereafter: 2016-07-22T00:00:00Z
        version: null
        invalidBefore: 2016-07-22T00:00:00Z
        tags:
          key: null
      properties:
        inputs:
          items:
            $ref: '#/components/schemas/Input'
          type: array
        invalidBefore:
          example: 2016-07-22T00:00:00Z
          format: yyyy-mm-ddThh:MM:ssZ
          type: string
        invalidHereafter:
          example: 2016-07-22T00:00:00Z
          format: yyyy-mm-ddThh:MM:ssZ
          type: string
        metadata:
          additionalProperties:
            $ref: '#/components/schemas/Metadata'
          type: object
        tags:
          additionalProperties:
            $ref: '#/components/schemas/Metadata'
          type: object
        version:
          $ref: '#/components/schemas/MarloweVersion'
      required:
      - inputs
      - metadata
      - tags
      - version
      type: object
    PostWithdrawalsRequest:
      example:
        payouts:
        - 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
        - 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
      properties:
        payouts:
          items:
            $ref: '#/components/schemas/TxOutRef'
          type: array
          uniqueItems: true
      required:
      - payouts
      type: object
    PubKeyCredential:
      description: A Plutus public key credential.
      properties:
        pubKeyCredential:
          type: string
      required:
      - pubKeyCredential
      type: object
    RolesConfig:
      oneOf:
      - $ref: '#/components/schemas/PolicyId'
      - $ref: '#/components/schemas/AdditionalRolesConfigProp'
    RoleTokenConfig:
      oneOf:
      - $ref: '#/components/schemas/Address'
      - $ref: '#/components/schemas/AddressAndMetadata'
      - $ref: '#/components/schemas/MetadataAndScript'
      - $ref: '#/components/schemas/MetadataAndRecipients'
    SafetyError:
      description: Information about the safety of a Marlowe contract and its state.
      properties:
        account-id:
          $ref: '#/components/schemas/Party'
        address:
          $ref: '#/components/schemas/Plutus.Address'
        bytes:
          exclusiveMinimum: false
          minimum: 0
          type: integer
        choice-id:
          $ref: '#/components/schemas/ChoiceId'
        cost:
          $ref: '#/components/schemas/ExBudget'
        currency-symbol:
          type: string
        detail:
          type: string
        error:
          type: string
        fatal:
          type: boolean
        hash:
          type: string
        message:
          type: string
        role-name:
          type: string
        token:
          $ref: '#/components/schemas/Token'
        token-name:
          type: string
        transaction:
          $ref: '#/components/schemas/Transaction'
        value-id:
          type: string
        warning:
          $ref: '#/components/schemas/TransactionWarning'
      required:
      - detail
      - error
      - fatal
    ScriptCredential:
      description: A Plutus script credential.
      properties:
        scriptCredential:
          type: string
      required:
      - scriptCredential
      type: object
    StakingHash:
      description: A Plutus staking hash.
      properties:
        stakingHash:
          $ref: '#/components/schemas/Plutus.Credential'
      required:
      - stakingHash
      type: object
    StakingHashTriple:
      items:
        type: integer
      maxItems: 3
      minItems: 3
      type: array
    StakingPointer:
      description: A Plutus staking pointer.
      properties:
        stakingHash:
          items:
            type: integer
          maxItems: 3
          minItems: 3
          type: array
      required:
      - stakingHash
      type: object
    TextEnvelope:
      example:
        description: description
        type: type
        cborHex: cborHex
      properties:
        cborHex:
          type: string
        description:
          type: string
        type:
          description: "What type of data is encoded in the CBOR Hex. Valid values\
            \ include \"Tx <era>\", \"TxBody <era>\", and \"ShelleyTxWitness <era>\"\
            \ where <era> is one of \"BabbageEra\", \"ConwayEra\"."
          type: string
      required:
      - cborHex
      - description
      - type
      type: object
    TextMetadata:
      description: Text data of up to 64 characters
      type: string
    TimeInterval:
      enum:
      - time_interval_start
      - time_interval_end
      type: string
    Token:
      description: A token with a currency symbol (minting policy ID) and token name.
      example:
        currency_symbol: currency_symbol
        token_name: token_name
      properties:
        currency_symbol:
          type: string
        token_name:
          type: string
      required:
      - currency_symbol
      - token_name
      type: object
    TokenAmount:
      format: int64
      type: integer
    TokenInAccount:
      properties:
        amount_of_token:
          $ref: '#/components/schemas/Token'
        in_account:
          $ref: '#/components/schemas/Party'
      required:
      - amount_of_token
      - in_account
      type: object
    TokenInAccountObject:
      properties:
        amount_of_token:
          $ref: '#/components/schemas/TokenObject'
        in_account:
          $ref: '#/components/schemas/PartyObject'
      required:
      - amount_of_token
      - in_account
      type: object
    TokenMetadata:
      additionalProperties:
        $ref: '#/components/schemas/Metadata'
      description: "Metadata for an NFT, as described by https://cips.cardano.org/cips/cip25/"
      properties:
        description:
          type: string
        files:
          items:
            $ref: '#/components/schemas/TokenMetadataFile'
          type: array
        image:
          type: string
        mediaType:
          type: string
        name:
          type: string
      required:
      - image
      - name
      type: object
    TokenMetadataFile:
      additionalProperties:
        $ref: '#/components/schemas/Metadata'
      properties:
        mediaType:
          type: string
        name:
          type: string
        src:
          type: string
      required:
      - mediaType
      - name
      - src
      type: object
    TokenObject:
      description: A token with a currency symbol (minting policy ID) and token name.
      oneOf:
      - $ref: '#/components/schemas/Token'
      - $ref: '#/components/schemas/LabelRef'
    Transaction:
      description: Information about a Marlowe transaction.
      properties:
        contract:
          $ref: '#/components/schemas/Contract'
        input:
          $ref: '#/components/schemas/TransactionInput'
        output:
          $ref: '#/components/schemas/TransactionOutput'
        state:
          $ref: '#/components/schemas/MarloweState'
      required:
      - contract
      - input
      - output
      - state
    TransactionError:
      description: A Marlowe transaction error.
      oneOf:
      - description: Ambiguous time interval.
        enum:
        - TEAmbiguousTimeIntervalError
        type: string
      - description: No match on applying input.
        enum:
        - TEApplyNoMatchError
        type: string
      - $ref: '#/components/schemas/TransactionError_oneOf'
      - description: A useless application of input.
        enum:
        - TEUselessTransaction
        type: string
      - description: A mismatch in the continuation hash.
        enum:
        - TEHashMismatch
        type: string
    TransactionInput:
      description: Marlowe transaction input.
      properties:
        tx_inputs:
          items:
            $ref: '#/components/schemas/Input'
          type: array
        tx_interval:
          $ref: '#/components/schemas/TransactionInput_tx_interval'
      required:
      - tx_inputs
      - tx_interval
      type: object
    TransactionOutput:
      description: Marlowe transaction output.
      oneOf:
      - $ref: '#/components/schemas/TxOutputSuccess'
      - $ref: '#/components/schemas/TxOutputError'
    TransactionWarning:
      description: A transaction semantics warning.
      oneOf:
      - $ref: '#/components/schemas/NonPositiveDeposit'
      - $ref: '#/components/schemas/NonPositivePayment'
      - $ref: '#/components/schemas/PartialPayment'
      - $ref: '#/components/schemas/VariableShadowing'
      - $ref: '#/components/schemas/AssertFail'
    Tx:
      example:
        metadata:
          key: null
        outputState:
          boundValues:
          - - null
            - null
          - - null
            - null
          minTime: 1
          accounts:
          - - null
            - null
          - - null
            - null
          choices:
          - - null
            - null
          - - null
            - null
        outputUtxo: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
        inputs:
        - null
        - null
        outputContract: null
        txBody:
          description: description
          type: type
          cborHex: cborHex
        transactionId: transactionId
        invalidBefore: 2016-07-22T00:00:00Z
        tags:
          key: null
        payouts:
        - assets:
            lovelace: 0
            tokens:
              key:
                key: 6
          role: role
          payoutId: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
        - assets:
            lovelace: 0
            tokens:
              key:
                key: 6
          role: role
          payoutId: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
        consumingTx: consumingTx
        assets:
          lovelace: 0
          tokens:
            key:
              key: 6
        continuations: continuations
        contractId: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
        block:
          blockNo: 1477267267644620800
          blockHeaderHash: blockHeaderHash
          slotNo: 9223372036854775807
        invalidHereafter: 2016-07-22T00:00:00Z
        inputUtxo: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
        status: null
      properties:
        assets:
          $ref: '#/components/schemas/Assets'
        block:
          $ref: '#/components/schemas/BlockHeader'
        consumingTx:
          description: The hex-encoded identifier of a Cardano transaction
          pattern: "^[a-fA-F0-9]{64}$"
          type: string
        continuations:
          type: string
        contractId:
          description: A reference to a transaction output with a transaction ID and
            index.
          example: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
          pattern: "^[a-fA-F0-9]{64}#[0-9]+$"
          type: string
        inputs:
          items:
            $ref: '#/components/schemas/Input'
          type: array
        inputUtxo:
          description: A reference to a transaction output with a transaction ID and
            index.
          example: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
          pattern: "^[a-fA-F0-9]{64}#[0-9]+$"
          type: string
        invalidBefore:
          example: 2016-07-22T00:00:00Z
          format: yyyy-mm-ddThh:MM:ssZ
          type: string
        invalidHereafter:
          example: 2016-07-22T00:00:00Z
          format: yyyy-mm-ddThh:MM:ssZ
          type: string
        metadata:
          additionalProperties:
            $ref: '#/components/schemas/Metadata'
          type: object
        outputContract:
          $ref: '#/components/schemas/Contract'
        outputState:
          $ref: '#/components/schemas/MarloweState'
        outputUtxo:
          description: A reference to a transaction output with a transaction ID and
            index.
          example: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
          pattern: "^[a-fA-F0-9]{64}#[0-9]+$"
          type: string
        payouts:
          items:
            $ref: '#/components/schemas/Payout'
          type: array
        status:
          $ref: '#/components/schemas/TxStatus'
        tags:
          additionalProperties:
            $ref: '#/components/schemas/Metadata'
          type: object
        transactionId:
          description: The hex-encoded identifier of a Cardano transaction
          pattern: "^[a-fA-F0-9]{64}$"
          type: string
        txBody:
          $ref: '#/components/schemas/TextEnvelope'
      required:
      - assets
      - contractId
      - inputUtxo
      - inputs
      - invalidBefore
      - invalidHereafter
      - metadata
      - payouts
      - status
      - tags
      - transactionId
      type: object
    TxHeader:
      example:
        utxo: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
        metadata:
          key: null
        continuations: continuations
        contractId: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
        block:
          blockNo: 1477267267644620800
          blockHeaderHash: blockHeaderHash
          slotNo: 9223372036854775807
        transactionId: transactionId
        status: null
        tags:
          key: null
      properties:
        block:
          $ref: '#/components/schemas/BlockHeader'
        continuations:
          type: string
        contractId:
          description: A reference to a transaction output with a transaction ID and
            index.
          example: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
          pattern: "^[a-fA-F0-9]{64}#[0-9]+$"
          type: string
        metadata:
          additionalProperties:
            $ref: '#/components/schemas/Metadata'
          type: object
        status:
          $ref: '#/components/schemas/TxStatus'
        tags:
          additionalProperties:
            $ref: '#/components/schemas/Metadata'
          type: object
        transactionId:
          description: The hex-encoded identifier of a Cardano transaction
          pattern: "^[a-fA-F0-9]{64}$"
          type: string
        utxo:
          description: A reference to a transaction output with a transaction ID and
            index.
          example: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
          pattern: "^[a-fA-F0-9]{64}#[0-9]+$"
          type: string
      required:
      - contractId
      - metadata
      - status
      - tags
      - transactionId
      type: object
    TxId:
      description: The hex-encoded identifier of a Cardano transaction
      pattern: "^[a-fA-F0-9]{64}$"
      type: string
    TxOutputError:
      description: Marlowe transaction error.
      properties:
        transaction_error:
          $ref: '#/components/schemas/TransactionError'
      required:
      - transaction_error
      type: object
    TxOutputSuccess:
      description: Marlowe transaction output information.
      properties:
        contract:
          $ref: '#/components/schemas/Contract'
        payments:
          items:
            $ref: '#/components/schemas/Payment'
          type: array
        state:
          $ref: '#/components/schemas/MarloweState'
        warnings:
          items:
            $ref: '#/components/schemas/TransactionWarning'
          type: array
      required:
      - contract
      - payments
      - state
      - warnings
      type: object
    TxOutRef:
      description: A reference to a transaction output with a transaction ID and index.
      example: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
      pattern: "^[a-fA-F0-9]{64}#[0-9]+$"
      type: string
    TxStatus:
      description: The status of a transaction on the local node.
      enum:
      - unsigned
      - submitted
      - confirmed
      type: string
    UseValue:
      properties:
        use_value:
          type: string
      required:
      - use_value
      type: object
    UTCTime:
      example: 2016-07-22T00:00:00Z
      format: yyyy-mm-ddThh:MM:ssZ
      type: string
    Value:
      description: A time-varying expression that evaluates to a boolean
      oneOf:
      - $ref: '#/components/schemas/TokenInAccount'
      - $ref: '#/components/schemas/TokenAmount'
      - $ref: '#/components/schemas/Negate'
      - $ref: '#/components/schemas/Add'
      - $ref: '#/components/schemas/Minus'
      - $ref: '#/components/schemas/Multiply'
      - $ref: '#/components/schemas/Divide'
      - $ref: '#/components/schemas/ValueOfChoice'
      - $ref: '#/components/schemas/TimeInterval'
      - $ref: '#/components/schemas/UseValue'
      - $ref: '#/components/schemas/IfValue'
    ValueObject:
      description: A time-varying expression that evaluates to a boolean
      oneOf:
      - $ref: '#/components/schemas/TokenInAccountObject'
      - $ref: '#/components/schemas/TokenAmount'
      - $ref: '#/components/schemas/NegateObject'
      - $ref: '#/components/schemas/AddObject'
      - $ref: '#/components/schemas/MinusObject'
      - $ref: '#/components/schemas/MultiplyObject'
      - $ref: '#/components/schemas/DivideObject'
      - $ref: '#/components/schemas/ValueOfChoiceObject'
      - $ref: '#/components/schemas/TimeInterval'
      - $ref: '#/components/schemas/UseValue'
      - $ref: '#/components/schemas/IfValueObject'
      - $ref: '#/components/schemas/LabelRef'
    ValueOfChoice:
      properties:
        value_of_choice:
          $ref: '#/components/schemas/ChoiceId'
      required:
      - value_of_choice
      type: object
    ValueOfChoiceObject:
      properties:
        value_of_choice:
          $ref: '#/components/schemas/ChoiceIdObject'
      required:
      - value_of_choice
      type: object
    VariableShadowing:
      description: A variable-name shadowing warning.
      properties:
        had_value:
          type: integer
        is_now_assigned:
          type: integer
        value_id:
          type: string
      required:
      - had_value
      - is_now_assigned
      - value_id
      type: object
    When:
      description: Wait for an action to be performed and apply the matching contract
        when it does. Apply the timeout contract if no actions have been performed
        in the timeout period.
      properties:
        timeout:
          format: int64
          type: integer
        timeout_continuation:
          $ref: '#/components/schemas/Contract'
        when:
          items:
            $ref: '#/components/schemas/Case'
          type: array
      required:
      - timeout
      - timeout_continuation
      - when
      type: object
    WhenObject:
      description: Wait for an action to be performed and apply the matching contract
        when it does. Apply the timeout contract if no actions have been performed
        in the timeout period.
      properties:
        timeout:
          format: int64
          type: integer
        timeout_continuation:
          $ref: '#/components/schemas/ContractObject'
        when:
          items:
            $ref: '#/components/schemas/CaseObject'
          type: array
      required:
      - timeout
      - timeout_continuation
      - when
      type: object
    Withdrawal:
      example:
        payouts:
        - withdrawalId: withdrawalId
          role:
            policyId: policyId
            assetName: assetName
          contractId: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
          payoutId: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
          status: null
        - withdrawalId: withdrawalId
          role:
            policyId: policyId
            assetName: assetName
          contractId: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
          payoutId: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
          status: null
        withdrawalId: withdrawalId
        block:
          blockNo: 1477267267644620800
          blockHeaderHash: blockHeaderHash
          slotNo: 9223372036854775807
        status: null
      properties:
        block:
          $ref: '#/components/schemas/BlockHeader'
        payouts:
          items:
            $ref: '#/components/schemas/PayoutHeader'
          type: array
          uniqueItems: true
        status:
          $ref: '#/components/schemas/TxStatus'
        withdrawalId:
          description: The hex-encoded identifier of a Cardano transaction
          pattern: "^[a-fA-F0-9]{64}$"
          type: string
      required:
      - payouts
      - status
      - withdrawalId
      type: object
    WithdrawalHeader:
      example:
        withdrawalId: withdrawalId
        block:
          blockNo: 1477267267644620800
          blockHeaderHash: blockHeaderHash
          slotNo: 9223372036854775807
        status: null
      properties:
        block:
          $ref: '#/components/schemas/BlockHeader'
        status:
          $ref: '#/components/schemas/TxStatus'
        withdrawalId:
          description: The hex-encoded identifier of a Cardano transaction
          pattern: "^[a-fA-F0-9]{64}$"
          type: string
      required:
      - status
      - withdrawalId
      type: object
    WithdrawPayoutsResponse:
      properties:
        links:
          $ref: '#/components/schemas/GetWithdrawalsResponse_results_inner_links'
        resource:
          $ref: '#/components/schemas/WithdrawTxEnvelope'
      required:
      - links
      - resource
      type: object
    WithdrawTxBodyEnvelope:
      description: The "type" property of "txBody" must be "TxBody BabbageEra" or
        "TxBody ConwayEra"
      properties:
        txBody:
          $ref: '#/components/schemas/TextEnvelope'
        withdrawalId:
          description: The hex-encoded identifier of a Cardano transaction
          pattern: "^[a-fA-F0-9]{64}$"
          type: string
      required:
      - txBody
      - withdrawalId
      type: object
    WithdrawTxEnvelope:
      description: The "type" property of "tx" must be "Tx BabbageEra" or "Tx ConwayEra"
      properties:
        tx:
          $ref: '#/components/schemas/TextEnvelope'
        withdrawalId:
          description: The hex-encoded identifier of a Cardano transaction
          pattern: "^[a-fA-F0-9]{64}$"
          type: string
      required:
      - tx
      - withdrawalId
      type: object
    AccountTokenTuple_inner:
      oneOf:
      - $ref: '#/components/schemas/Party'
      - $ref: '#/components/schemas/Token'
    ApplyInputsResponse_links:
      example:
        transaction: transaction
      properties:
        transaction:
          type: string
      type: object
    CreateContractResponse_links:
      properties:
        contract:
          type: string
      type: object
    GetContractResponse_links:
      example:
        transactions: transactions
      properties:
        transactions:
          type: string
      type: object
    GetContractsResponse_results_inner_links:
      example:
        contract: contract
        transactions: transactions
      properties:
        contract:
          type: string
        transactions:
          type: string
      type: object
    GetContractsResponse_results_inner:
      example:
        resource:
          metadata:
            key: null
          continuations: continuations
          contractId: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
          block:
            blockNo: 1477267267644620800
            blockHeaderHash: blockHeaderHash
            slotNo: 9223372036854775807
          roleTokenMintingPolicyId: roleTokenMintingPolicyId
          version: null
          status: null
          tags:
            key: null
        links:
          contract: contract
          transactions: transactions
      properties:
        links:
          $ref: '#/components/schemas/GetContractsResponse_results_inner_links'
        resource:
          $ref: '#/components/schemas/ContractHeader'
      required:
      - links
      - resource
      type: object
    GetPayoutResponse_links:
      example:
        contract: contract
        withdrawal: withdrawal
        transaction: transaction
      properties:
        contract:
          type: string
        transaction:
          type: string
        withdrawal:
          type: string
      type: object
    GetPayoutsResponse_results_inner_links:
      example:
        payout: payout
      properties:
        payout:
          type: string
      type: object
    GetPayoutsResponse_results_inner:
      example:
        resource:
          withdrawalId: withdrawalId
          role:
            policyId: policyId
            assetName: assetName
          contractId: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
          payoutId: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
          status: null
        links:
          payout: payout
      properties:
        links:
          $ref: '#/components/schemas/GetPayoutsResponse_results_inner_links'
        resource:
          $ref: '#/components/schemas/PayoutHeader'
      required:
      - links
      - resource
      type: object
    GetTransactionResponse_links:
      example:
        next: next
        previous: previous
      properties:
        next:
          type: string
        previous:
          type: string
      type: object
    GetTransactionsResponse_results_inner:
      example:
        resource:
          utxo: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
          metadata:
            key: null
          continuations: continuations
          contractId: 98d601c9307dd43307cf68a03aad0086d4e07a789b66919ccf9f7f7676577eb7#1
          block:
            blockNo: 1477267267644620800
            blockHeaderHash: blockHeaderHash
            slotNo: 9223372036854775807
          transactionId: transactionId
          status: null
          tags:
            key: null
        links:
          transaction: transaction
      properties:
        links:
          $ref: '#/components/schemas/ApplyInputsResponse_links'
        resource:
          $ref: '#/components/schemas/TxHeader'
      required:
      - links
      - resource
      type: object
    GetWithdrawalsResponse_results_inner_links:
      example:
        withdrawal: withdrawal
      properties:
        withdrawal:
          type: string
      type: object
    GetWithdrawalsResponse_results_inner:
      example:
        resource:
          withdrawalId: withdrawalId
          block:
            blockNo: 1477267267644620800
            blockHeaderHash: blockHeaderHash
            slotNo: 9223372036854775807
          status: null
        links:
          withdrawal: withdrawal
      properties:
        links:
          $ref: '#/components/schemas/GetWithdrawalsResponse_results_inner_links'
        resource:
          $ref: '#/components/schemas/WithdrawalHeader'
      required:
      - links
      - resource
      type: object
    IntervalInPast_intervalInPastError:
      properties:
        from:
          type: integer
        minTime:
          type: integer
        to:
          type: integer
      required:
      - from
      - minTime
      - to
      type: object
    InvalidInterval_invalidInterval:
      properties:
        from:
          type: integer
        to:
          type: integer
      required:
      - from
      - to
      type: object
    LabelledObject_value:
      oneOf:
      - $ref: '#/components/schemas/ValueObject'
      - $ref: '#/components/schemas/ObservationObject'
      - $ref: '#/components/schemas/ContractObject'
      - $ref: '#/components/schemas/PartyObject'
      - $ref: '#/components/schemas/TokenObject'
      - $ref: '#/components/schemas/ActionObject'
    MarloweState_accounts_inner_inner:
      oneOf:
      - $ref: '#/components/schemas/AccountTokenTuple'
      - type: integer
    MarloweState_boundValues_inner_inner:
      oneOf:
      - type: string
      - type: integer
    MarloweState_choices_inner_inner:
      oneOf:
      - $ref: '#/components/schemas/ChoiceId'
      - type: integer
    PostContractsRequest_contract:
      oneOf:
      - $ref: '#/components/schemas/Contract'
      - $ref: '#/components/schemas/ContractSourceId'
    TransactionError_oneOf:
      description: An invalid time interval.
      properties:
        context:
          $ref: '#/components/schemas/IntervalError'
        error:
          enum:
          - TEIntervalError
          type: string
      required:
      - context
      - error
      type: object
    TransactionInput_tx_interval:
      description: Time interval.
      properties:
        from:
          type: integer
        to:
          type: integer
      required:
      - from
      - to
      type: object
