/*
Marlowe Runtime REST API

REST API for Marlowe Runtime

API version: 0.0.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marloweruntime

import (
	"encoding/json"
)

// checks if the PayToAccount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PayToAccount{}

// PayToAccount Pays funds into a party's account in the contract.
type PayToAccount struct {
	Account Party `json:"account"`
}

// NewPayToAccount instantiates a new PayToAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPayToAccount(account Party) *PayToAccount {
	this := PayToAccount{}
	this.Account = account
	return &this
}

// NewPayToAccountWithDefaults instantiates a new PayToAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPayToAccountWithDefaults() *PayToAccount {
	this := PayToAccount{}
	return &this
}

// GetAccount returns the Account field value
func (o *PayToAccount) GetAccount() Party {
	if o == nil {
		var ret Party
		return ret
	}

	return o.Account
}

// GetAccountOk returns a tuple with the Account field value
// and a boolean to check if the value has been set.
func (o *PayToAccount) GetAccountOk() (*Party, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Account, true
}

// SetAccount sets field value
func (o *PayToAccount) SetAccount(v Party) {
	o.Account = v
}

func (o PayToAccount) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PayToAccount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["account"] = o.Account
	return toSerialize, nil
}

type NullablePayToAccount struct {
	value *PayToAccount
	isSet bool
}

func (v NullablePayToAccount) Get() *PayToAccount {
	return v.value
}

func (v *NullablePayToAccount) Set(val *PayToAccount) {
	v.value = val
	v.isSet = true
}

func (v NullablePayToAccount) IsSet() bool {
	return v.isSet
}

func (v *NullablePayToAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePayToAccount(val *PayToAccount) *NullablePayToAccount {
	return &NullablePayToAccount{value: val, isSet: true}
}

func (v NullablePayToAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePayToAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


