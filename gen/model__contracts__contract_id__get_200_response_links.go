/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ContractsContractIdGet200ResponseLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContractsContractIdGet200ResponseLinks{}

// ContractsContractIdGet200ResponseLinks struct for ContractsContractIdGet200ResponseLinks
type ContractsContractIdGet200ResponseLinks struct {
	Transactions *string `json:"transactions,omitempty"`
}

// NewContractsContractIdGet200ResponseLinks instantiates a new ContractsContractIdGet200ResponseLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContractsContractIdGet200ResponseLinks() *ContractsContractIdGet200ResponseLinks {
	this := ContractsContractIdGet200ResponseLinks{}
	return &this
}

// NewContractsContractIdGet200ResponseLinksWithDefaults instantiates a new ContractsContractIdGet200ResponseLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContractsContractIdGet200ResponseLinksWithDefaults() *ContractsContractIdGet200ResponseLinks {
	this := ContractsContractIdGet200ResponseLinks{}
	return &this
}

// GetTransactions returns the Transactions field value if set, zero value otherwise.
func (o *ContractsContractIdGet200ResponseLinks) GetTransactions() string {
	if o == nil || IsNil(o.Transactions) {
		var ret string
		return ret
	}
	return *o.Transactions
}

// GetTransactionsOk returns a tuple with the Transactions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContractsContractIdGet200ResponseLinks) GetTransactionsOk() (*string, bool) {
	if o == nil || IsNil(o.Transactions) {
		return nil, false
	}
	return o.Transactions, true
}

// HasTransactions returns a boolean if a field has been set.
func (o *ContractsContractIdGet200ResponseLinks) HasTransactions() bool {
	if o != nil && !IsNil(o.Transactions) {
		return true
	}

	return false
}

// SetTransactions gets a reference to the given string and assigns it to the Transactions field.
func (o *ContractsContractIdGet200ResponseLinks) SetTransactions(v string) {
	o.Transactions = &v
}

func (o ContractsContractIdGet200ResponseLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContractsContractIdGet200ResponseLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Transactions) {
		toSerialize["transactions"] = o.Transactions
	}
	return toSerialize, nil
}

type NullableContractsContractIdGet200ResponseLinks struct {
	value *ContractsContractIdGet200ResponseLinks
	isSet bool
}

func (v NullableContractsContractIdGet200ResponseLinks) Get() *ContractsContractIdGet200ResponseLinks {
	return v.value
}

func (v *NullableContractsContractIdGet200ResponseLinks) Set(val *ContractsContractIdGet200ResponseLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableContractsContractIdGet200ResponseLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableContractsContractIdGet200ResponseLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContractsContractIdGet200ResponseLinks(val *ContractsContractIdGet200ResponseLinks) *NullableContractsContractIdGet200ResponseLinks {
	return &NullableContractsContractIdGet200ResponseLinks{value: val, isSet: true}
}

func (v NullableContractsContractIdGet200ResponseLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContractsContractIdGet200ResponseLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


