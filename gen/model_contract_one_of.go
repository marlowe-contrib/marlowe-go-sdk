/*
Marlowe Runtime REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.5
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ContractOneOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContractOneOf{}

// ContractOneOf A payment will be sent from an account to a payee.
type ContractOneOf struct {
	FromAccount Party `json:"from_account"`
	Pay Value `json:"pay"`
	Then Contract `json:"then"`
	To Payee `json:"to"`
	Token Token `json:"token"`
}

// NewContractOneOf instantiates a new ContractOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContractOneOf(fromAccount Party, pay Value, then Contract, to Payee, token Token) *ContractOneOf {
	this := ContractOneOf{}
	this.FromAccount = fromAccount
	this.Pay = pay
	this.Then = then
	this.To = to
	this.Token = token
	return &this
}

// NewContractOneOfWithDefaults instantiates a new ContractOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContractOneOfWithDefaults() *ContractOneOf {
	this := ContractOneOf{}
	return &this
}

// GetFromAccount returns the FromAccount field value
func (o *ContractOneOf) GetFromAccount() Party {
	if o == nil {
		var ret Party
		return ret
	}

	return o.FromAccount
}

// GetFromAccountOk returns a tuple with the FromAccount field value
// and a boolean to check if the value has been set.
func (o *ContractOneOf) GetFromAccountOk() (*Party, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FromAccount, true
}

// SetFromAccount sets field value
func (o *ContractOneOf) SetFromAccount(v Party) {
	o.FromAccount = v
}

// GetPay returns the Pay field value
func (o *ContractOneOf) GetPay() Value {
	if o == nil {
		var ret Value
		return ret
	}

	return o.Pay
}

// GetPayOk returns a tuple with the Pay field value
// and a boolean to check if the value has been set.
func (o *ContractOneOf) GetPayOk() (*Value, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pay, true
}

// SetPay sets field value
func (o *ContractOneOf) SetPay(v Value) {
	o.Pay = v
}

// GetThen returns the Then field value
func (o *ContractOneOf) GetThen() Contract {
	if o == nil {
		var ret Contract
		return ret
	}

	return o.Then
}

// GetThenOk returns a tuple with the Then field value
// and a boolean to check if the value has been set.
func (o *ContractOneOf) GetThenOk() (*Contract, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Then, true
}

// SetThen sets field value
func (o *ContractOneOf) SetThen(v Contract) {
	o.Then = v
}

// GetTo returns the To field value
func (o *ContractOneOf) GetTo() Payee {
	if o == nil {
		var ret Payee
		return ret
	}

	return o.To
}

// GetToOk returns a tuple with the To field value
// and a boolean to check if the value has been set.
func (o *ContractOneOf) GetToOk() (*Payee, bool) {
	if o == nil {
		return nil, false
	}
	return &o.To, true
}

// SetTo sets field value
func (o *ContractOneOf) SetTo(v Payee) {
	o.To = v
}

// GetToken returns the Token field value
func (o *ContractOneOf) GetToken() Token {
	if o == nil {
		var ret Token
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *ContractOneOf) GetTokenOk() (*Token, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *ContractOneOf) SetToken(v Token) {
	o.Token = v
}

func (o ContractOneOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContractOneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["from_account"] = o.FromAccount
	toSerialize["pay"] = o.Pay
	toSerialize["then"] = o.Then
	toSerialize["to"] = o.To
	toSerialize["token"] = o.Token
	return toSerialize, nil
}

type NullableContractOneOf struct {
	value *ContractOneOf
	isSet bool
}

func (v NullableContractOneOf) Get() *ContractOneOf {
	return v.value
}

func (v *NullableContractOneOf) Set(val *ContractOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableContractOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableContractOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContractOneOf(val *ContractOneOf) *NullableContractOneOf {
	return &NullableContractOneOf{value: val, isSet: true}
}

func (v NullableContractOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContractOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


