/*
Marlowe Runtime REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.5
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ContractHeader type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContractHeader{}

// ContractHeader struct for ContractHeader
type ContractHeader struct {
	Block *BlockHeader `json:"block,omitempty"`
	Continuations *string `json:"continuations,omitempty"`
	// A reference to a transaction output with a transaction ID and index.
	ContractId string `json:"contractId"`
	Metadata map[string]interface{} `json:"metadata"`
	// The hex-encoded minting policy ID for a native Cardano token
	RoleTokenMintingPolicyId string `json:"roleTokenMintingPolicyId"`
	Status TxStatus `json:"status"`
	Tags map[string]interface{} `json:"tags"`
	Version MarloweVersion `json:"version"`
}

// NewContractHeader instantiates a new ContractHeader object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContractHeader(contractId string, metadata map[string]interface{}, roleTokenMintingPolicyId string, status TxStatus, tags map[string]interface{}, version MarloweVersion) *ContractHeader {
	this := ContractHeader{}
	this.ContractId = contractId
	this.Metadata = metadata
	this.RoleTokenMintingPolicyId = roleTokenMintingPolicyId
	this.Status = status
	this.Tags = tags
	this.Version = version
	return &this
}

// NewContractHeaderWithDefaults instantiates a new ContractHeader object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContractHeaderWithDefaults() *ContractHeader {
	this := ContractHeader{}
	return &this
}

// GetBlock returns the Block field value if set, zero value otherwise.
func (o *ContractHeader) GetBlock() BlockHeader {
	if o == nil || IsNil(o.Block) {
		var ret BlockHeader
		return ret
	}
	return *o.Block
}

// GetBlockOk returns a tuple with the Block field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContractHeader) GetBlockOk() (*BlockHeader, bool) {
	if o == nil || IsNil(o.Block) {
		return nil, false
	}
	return o.Block, true
}

// HasBlock returns a boolean if a field has been set.
func (o *ContractHeader) HasBlock() bool {
	if o != nil && !IsNil(o.Block) {
		return true
	}

	return false
}

// SetBlock gets a reference to the given BlockHeader and assigns it to the Block field.
func (o *ContractHeader) SetBlock(v BlockHeader) {
	o.Block = &v
}

// GetContinuations returns the Continuations field value if set, zero value otherwise.
func (o *ContractHeader) GetContinuations() string {
	if o == nil || IsNil(o.Continuations) {
		var ret string
		return ret
	}
	return *o.Continuations
}

// GetContinuationsOk returns a tuple with the Continuations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContractHeader) GetContinuationsOk() (*string, bool) {
	if o == nil || IsNil(o.Continuations) {
		return nil, false
	}
	return o.Continuations, true
}

// HasContinuations returns a boolean if a field has been set.
func (o *ContractHeader) HasContinuations() bool {
	if o != nil && !IsNil(o.Continuations) {
		return true
	}

	return false
}

// SetContinuations gets a reference to the given string and assigns it to the Continuations field.
func (o *ContractHeader) SetContinuations(v string) {
	o.Continuations = &v
}

// GetContractId returns the ContractId field value
func (o *ContractHeader) GetContractId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContractId
}

// GetContractIdOk returns a tuple with the ContractId field value
// and a boolean to check if the value has been set.
func (o *ContractHeader) GetContractIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContractId, true
}

// SetContractId sets field value
func (o *ContractHeader) SetContractId(v string) {
	o.ContractId = v
}

// GetMetadata returns the Metadata field value
func (o *ContractHeader) GetMetadata() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
func (o *ContractHeader) GetMetadataOk() (*map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metadata, true
}

// SetMetadata sets field value
func (o *ContractHeader) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetRoleTokenMintingPolicyId returns the RoleTokenMintingPolicyId field value
func (o *ContractHeader) GetRoleTokenMintingPolicyId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RoleTokenMintingPolicyId
}

// GetRoleTokenMintingPolicyIdOk returns a tuple with the RoleTokenMintingPolicyId field value
// and a boolean to check if the value has been set.
func (o *ContractHeader) GetRoleTokenMintingPolicyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RoleTokenMintingPolicyId, true
}

// SetRoleTokenMintingPolicyId sets field value
func (o *ContractHeader) SetRoleTokenMintingPolicyId(v string) {
	o.RoleTokenMintingPolicyId = v
}

// GetStatus returns the Status field value
func (o *ContractHeader) GetStatus() TxStatus {
	if o == nil {
		var ret TxStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ContractHeader) GetStatusOk() (*TxStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ContractHeader) SetStatus(v TxStatus) {
	o.Status = v
}

// GetTags returns the Tags field value
func (o *ContractHeader) GetTags() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value
// and a boolean to check if the value has been set.
func (o *ContractHeader) GetTagsOk() (*map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tags, true
}

// SetTags sets field value
func (o *ContractHeader) SetTags(v map[string]interface{}) {
	o.Tags = v
}

// GetVersion returns the Version field value
func (o *ContractHeader) GetVersion() MarloweVersion {
	if o == nil {
		var ret MarloweVersion
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *ContractHeader) GetVersionOk() (*MarloweVersion, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *ContractHeader) SetVersion(v MarloweVersion) {
	o.Version = v
}

func (o ContractHeader) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContractHeader) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Block) {
		toSerialize["block"] = o.Block
	}
	if !IsNil(o.Continuations) {
		toSerialize["continuations"] = o.Continuations
	}
	toSerialize["contractId"] = o.ContractId
	toSerialize["metadata"] = o.Metadata
	toSerialize["roleTokenMintingPolicyId"] = o.RoleTokenMintingPolicyId
	toSerialize["status"] = o.Status
	toSerialize["tags"] = o.Tags
	toSerialize["version"] = o.Version
	return toSerialize, nil
}

type NullableContractHeader struct {
	value *ContractHeader
	isSet bool
}

func (v NullableContractHeader) Get() *ContractHeader {
	return v.value
}

func (v *NullableContractHeader) Set(val *ContractHeader) {
	v.value = val
	v.isSet = true
}

func (v NullableContractHeader) IsSet() bool {
	return v.isSet
}

func (v *NullableContractHeader) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContractHeader(val *ContractHeader) *NullableContractHeader {
	return &NullableContractHeader{value: val, isSet: true}
}

func (v NullableContractHeader) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContractHeader) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


