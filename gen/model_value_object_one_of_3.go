/*
Marlowe Runtime REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.5
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ValueObjectOneOf3 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ValueObjectOneOf3{}

// ValueObjectOneOf3 struct for ValueObjectOneOf3
type ValueObjectOneOf3 struct {
	Minus ValueObject `json:"minus"`
	Value ValueObject `json:"value"`
}

// NewValueObjectOneOf3 instantiates a new ValueObjectOneOf3 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewValueObjectOneOf3(minus ValueObject, value ValueObject) *ValueObjectOneOf3 {
	this := ValueObjectOneOf3{}
	this.Minus = minus
	this.Value = value
	return &this
}

// NewValueObjectOneOf3WithDefaults instantiates a new ValueObjectOneOf3 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewValueObjectOneOf3WithDefaults() *ValueObjectOneOf3 {
	this := ValueObjectOneOf3{}
	return &this
}

// GetMinus returns the Minus field value
func (o *ValueObjectOneOf3) GetMinus() ValueObject {
	if o == nil {
		var ret ValueObject
		return ret
	}

	return o.Minus
}

// GetMinusOk returns a tuple with the Minus field value
// and a boolean to check if the value has been set.
func (o *ValueObjectOneOf3) GetMinusOk() (*ValueObject, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Minus, true
}

// SetMinus sets field value
func (o *ValueObjectOneOf3) SetMinus(v ValueObject) {
	o.Minus = v
}

// GetValue returns the Value field value
func (o *ValueObjectOneOf3) GetValue() ValueObject {
	if o == nil {
		var ret ValueObject
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *ValueObjectOneOf3) GetValueOk() (*ValueObject, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *ValueObjectOneOf3) SetValue(v ValueObject) {
	o.Value = v
}

func (o ValueObjectOneOf3) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ValueObjectOneOf3) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["minus"] = o.Minus
	toSerialize["value"] = o.Value
	return toSerialize, nil
}

type NullableValueObjectOneOf3 struct {
	value *ValueObjectOneOf3
	isSet bool
}

func (v NullableValueObjectOneOf3) Get() *ValueObjectOneOf3 {
	return v.value
}

func (v *NullableValueObjectOneOf3) Set(val *ValueObjectOneOf3) {
	v.value = val
	v.isSet = true
}

func (v NullableValueObjectOneOf3) IsSet() bool {
	return v.isSet
}

func (v *NullableValueObjectOneOf3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableValueObjectOneOf3(val *ValueObjectOneOf3) *NullableValueObjectOneOf3 {
	return &NullableValueObjectOneOf3{value: val, isSet: true}
}

func (v NullableValueObjectOneOf3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableValueObjectOneOf3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


