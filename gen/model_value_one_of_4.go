/*
Marlowe Runtime REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.5
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ValueOneOf4 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ValueOneOf4{}

// ValueOneOf4 struct for ValueOneOf4
type ValueOneOf4 struct {
	Multiply Value `json:"multiply"`
	Times Value `json:"times"`
}

// NewValueOneOf4 instantiates a new ValueOneOf4 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewValueOneOf4(multiply Value, times Value) *ValueOneOf4 {
	this := ValueOneOf4{}
	this.Multiply = multiply
	this.Times = times
	return &this
}

// NewValueOneOf4WithDefaults instantiates a new ValueOneOf4 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewValueOneOf4WithDefaults() *ValueOneOf4 {
	this := ValueOneOf4{}
	return &this
}

// GetMultiply returns the Multiply field value
func (o *ValueOneOf4) GetMultiply() Value {
	if o == nil {
		var ret Value
		return ret
	}

	return o.Multiply
}

// GetMultiplyOk returns a tuple with the Multiply field value
// and a boolean to check if the value has been set.
func (o *ValueOneOf4) GetMultiplyOk() (*Value, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Multiply, true
}

// SetMultiply sets field value
func (o *ValueOneOf4) SetMultiply(v Value) {
	o.Multiply = v
}

// GetTimes returns the Times field value
func (o *ValueOneOf4) GetTimes() Value {
	if o == nil {
		var ret Value
		return ret
	}

	return o.Times
}

// GetTimesOk returns a tuple with the Times field value
// and a boolean to check if the value has been set.
func (o *ValueOneOf4) GetTimesOk() (*Value, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Times, true
}

// SetTimes sets field value
func (o *ValueOneOf4) SetTimes(v Value) {
	o.Times = v
}

func (o ValueOneOf4) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ValueOneOf4) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["multiply"] = o.Multiply
	toSerialize["times"] = o.Times
	return toSerialize, nil
}

type NullableValueOneOf4 struct {
	value *ValueOneOf4
	isSet bool
}

func (v NullableValueOneOf4) Get() *ValueOneOf4 {
	return v.value
}

func (v *NullableValueOneOf4) Set(val *ValueOneOf4) {
	v.value = val
	v.isSet = true
}

func (v NullableValueOneOf4) IsSet() bool {
	return v.isSet
}

func (v *NullableValueOneOf4) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableValueOneOf4(val *ValueOneOf4) *NullableValueOneOf4 {
	return &NullableValueOneOf4{value: val, isSet: true}
}

func (v NullableValueOneOf4) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableValueOneOf4) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


