/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MarloweState type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MarloweState{}

// MarloweState The on-chain state of a Marlowe contract.
type MarloweState struct {
	Accounts [][]MarloweStateAccountsInnerInner `json:"accounts"`
	BoundValues [][]MarloweStateBoundValuesInnerInner `json:"boundValues"`
	Choices [][]MarloweStateChoicesInnerInner `json:"choices"`
	MinTime int32 `json:"minTime"`
}

// NewMarloweState instantiates a new MarloweState object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarloweState(accounts [][]MarloweStateAccountsInnerInner, boundValues [][]MarloweStateBoundValuesInnerInner, choices [][]MarloweStateChoicesInnerInner, minTime int32) *MarloweState {
	this := MarloweState{}
	this.Accounts = accounts
	this.BoundValues = boundValues
	this.Choices = choices
	this.MinTime = minTime
	return &this
}

// NewMarloweStateWithDefaults instantiates a new MarloweState object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarloweStateWithDefaults() *MarloweState {
	this := MarloweState{}
	return &this
}

// GetAccounts returns the Accounts field value
func (o *MarloweState) GetAccounts() [][]MarloweStateAccountsInnerInner {
	if o == nil {
		var ret [][]MarloweStateAccountsInnerInner
		return ret
	}

	return o.Accounts
}

// GetAccountsOk returns a tuple with the Accounts field value
// and a boolean to check if the value has been set.
func (o *MarloweState) GetAccountsOk() ([][]MarloweStateAccountsInnerInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Accounts, true
}

// SetAccounts sets field value
func (o *MarloweState) SetAccounts(v [][]MarloweStateAccountsInnerInner) {
	o.Accounts = v
}

// GetBoundValues returns the BoundValues field value
func (o *MarloweState) GetBoundValues() [][]MarloweStateBoundValuesInnerInner {
	if o == nil {
		var ret [][]MarloweStateBoundValuesInnerInner
		return ret
	}

	return o.BoundValues
}

// GetBoundValuesOk returns a tuple with the BoundValues field value
// and a boolean to check if the value has been set.
func (o *MarloweState) GetBoundValuesOk() ([][]MarloweStateBoundValuesInnerInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.BoundValues, true
}

// SetBoundValues sets field value
func (o *MarloweState) SetBoundValues(v [][]MarloweStateBoundValuesInnerInner) {
	o.BoundValues = v
}

// GetChoices returns the Choices field value
func (o *MarloweState) GetChoices() [][]MarloweStateChoicesInnerInner {
	if o == nil {
		var ret [][]MarloweStateChoicesInnerInner
		return ret
	}

	return o.Choices
}

// GetChoicesOk returns a tuple with the Choices field value
// and a boolean to check if the value has been set.
func (o *MarloweState) GetChoicesOk() ([][]MarloweStateChoicesInnerInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Choices, true
}

// SetChoices sets field value
func (o *MarloweState) SetChoices(v [][]MarloweStateChoicesInnerInner) {
	o.Choices = v
}

// GetMinTime returns the MinTime field value
func (o *MarloweState) GetMinTime() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MinTime
}

// GetMinTimeOk returns a tuple with the MinTime field value
// and a boolean to check if the value has been set.
func (o *MarloweState) GetMinTimeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MinTime, true
}

// SetMinTime sets field value
func (o *MarloweState) SetMinTime(v int32) {
	o.MinTime = v
}

func (o MarloweState) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MarloweState) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["accounts"] = o.Accounts
	toSerialize["boundValues"] = o.BoundValues
	toSerialize["choices"] = o.Choices
	toSerialize["minTime"] = o.MinTime
	return toSerialize, nil
}

type NullableMarloweState struct {
	value *MarloweState
	isSet bool
}

func (v NullableMarloweState) Get() *MarloweState {
	return v.value
}

func (v *NullableMarloweState) Set(val *MarloweState) {
	v.value = val
	v.isSet = true
}

func (v NullableMarloweState) IsSet() bool {
	return v.isSet
}

func (v *NullableMarloweState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarloweState(val *MarloweState) *NullableMarloweState {
	return &NullableMarloweState{value: val, isSet: true}
}

func (v NullableMarloweState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarloweState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


