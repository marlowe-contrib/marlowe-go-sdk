/*
Marlowe Runtime REST API

REST API for Marlowe Runtime

API version: 0.0.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PayeeObjectOneOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PayeeObjectOneOf1{}

// PayeeObjectOneOf1 Pays funds to a party.
type PayeeObjectOneOf1 struct {
	Party PartyObject `json:"party"`
}

// NewPayeeObjectOneOf1 instantiates a new PayeeObjectOneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPayeeObjectOneOf1(party PartyObject) *PayeeObjectOneOf1 {
	this := PayeeObjectOneOf1{}
	this.Party = party
	return &this
}

// NewPayeeObjectOneOf1WithDefaults instantiates a new PayeeObjectOneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPayeeObjectOneOf1WithDefaults() *PayeeObjectOneOf1 {
	this := PayeeObjectOneOf1{}
	return &this
}

// GetParty returns the Party field value
func (o *PayeeObjectOneOf1) GetParty() PartyObject {
	if o == nil {
		var ret PartyObject
		return ret
	}

	return o.Party
}

// GetPartyOk returns a tuple with the Party field value
// and a boolean to check if the value has been set.
func (o *PayeeObjectOneOf1) GetPartyOk() (*PartyObject, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Party, true
}

// SetParty sets field value
func (o *PayeeObjectOneOf1) SetParty(v PartyObject) {
	o.Party = v
}

func (o PayeeObjectOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PayeeObjectOneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["party"] = o.Party
	return toSerialize, nil
}

type NullablePayeeObjectOneOf1 struct {
	value *PayeeObjectOneOf1
	isSet bool
}

func (v NullablePayeeObjectOneOf1) Get() *PayeeObjectOneOf1 {
	return v.value
}

func (v *NullablePayeeObjectOneOf1) Set(val *PayeeObjectOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullablePayeeObjectOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullablePayeeObjectOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePayeeObjectOneOf1(val *PayeeObjectOneOf1) *NullablePayeeObjectOneOf1 {
	return &NullablePayeeObjectOneOf1{value: val, isSet: true}
}

func (v NullablePayeeObjectOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePayeeObjectOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


