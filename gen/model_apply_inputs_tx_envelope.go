/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ApplyInputsTxEnvelope type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApplyInputsTxEnvelope{}

// ApplyInputsTxEnvelope struct for ApplyInputsTxEnvelope
type ApplyInputsTxEnvelope struct {
	Tx TextEnvelope `json:"tx"`
	// The hex-encoded identifier of a Cardano transaction
	WithdrawalId string `json:"withdrawalId"`
}

// NewApplyInputsTxEnvelope instantiates a new ApplyInputsTxEnvelope object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplyInputsTxEnvelope(tx TextEnvelope, withdrawalId string) *ApplyInputsTxEnvelope {
	this := ApplyInputsTxEnvelope{}
	this.Tx = tx
	this.WithdrawalId = withdrawalId
	return &this
}

// NewApplyInputsTxEnvelopeWithDefaults instantiates a new ApplyInputsTxEnvelope object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplyInputsTxEnvelopeWithDefaults() *ApplyInputsTxEnvelope {
	this := ApplyInputsTxEnvelope{}
	return &this
}

// GetTx returns the Tx field value
func (o *ApplyInputsTxEnvelope) GetTx() TextEnvelope {
	if o == nil {
		var ret TextEnvelope
		return ret
	}

	return o.Tx
}

// GetTxOk returns a tuple with the Tx field value
// and a boolean to check if the value has been set.
func (o *ApplyInputsTxEnvelope) GetTxOk() (*TextEnvelope, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tx, true
}

// SetTx sets field value
func (o *ApplyInputsTxEnvelope) SetTx(v TextEnvelope) {
	o.Tx = v
}

// GetWithdrawalId returns the WithdrawalId field value
func (o *ApplyInputsTxEnvelope) GetWithdrawalId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WithdrawalId
}

// GetWithdrawalIdOk returns a tuple with the WithdrawalId field value
// and a boolean to check if the value has been set.
func (o *ApplyInputsTxEnvelope) GetWithdrawalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WithdrawalId, true
}

// SetWithdrawalId sets field value
func (o *ApplyInputsTxEnvelope) SetWithdrawalId(v string) {
	o.WithdrawalId = v
}

func (o ApplyInputsTxEnvelope) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplyInputsTxEnvelope) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["tx"] = o.Tx
	toSerialize["withdrawalId"] = o.WithdrawalId
	return toSerialize, nil
}

type NullableApplyInputsTxEnvelope struct {
	value *ApplyInputsTxEnvelope
	isSet bool
}

func (v NullableApplyInputsTxEnvelope) Get() *ApplyInputsTxEnvelope {
	return v.value
}

func (v *NullableApplyInputsTxEnvelope) Set(val *ApplyInputsTxEnvelope) {
	v.value = val
	v.isSet = true
}

func (v NullableApplyInputsTxEnvelope) IsSet() bool {
	return v.isSet
}

func (v *NullableApplyInputsTxEnvelope) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplyInputsTxEnvelope(val *ApplyInputsTxEnvelope) *NullableApplyInputsTxEnvelope {
	return &NullableApplyInputsTxEnvelope{value: val, isSet: true}
}

func (v NullableApplyInputsTxEnvelope) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplyInputsTxEnvelope) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


