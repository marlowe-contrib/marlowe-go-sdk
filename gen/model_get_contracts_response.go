/*
Marlowe Runtime REST API

REST API for Marlowe Runtime

API version: 0.0.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetContractsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetContractsResponse{}

// GetContractsResponse struct for GetContractsResponse
type GetContractsResponse struct {
	Results []GetContractsResponseResultsInner `json:"results"`
}

// NewGetContractsResponse instantiates a new GetContractsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetContractsResponse(results []GetContractsResponseResultsInner) *GetContractsResponse {
	this := GetContractsResponse{}
	this.Results = results
	return &this
}

// NewGetContractsResponseWithDefaults instantiates a new GetContractsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetContractsResponseWithDefaults() *GetContractsResponse {
	this := GetContractsResponse{}
	return &this
}

// GetResults returns the Results field value
func (o *GetContractsResponse) GetResults() []GetContractsResponseResultsInner {
	if o == nil {
		var ret []GetContractsResponseResultsInner
		return ret
	}

	return o.Results
}

// GetResultsOk returns a tuple with the Results field value
// and a boolean to check if the value has been set.
func (o *GetContractsResponse) GetResultsOk() ([]GetContractsResponseResultsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Results, true
}

// SetResults sets field value
func (o *GetContractsResponse) SetResults(v []GetContractsResponseResultsInner) {
	o.Results = v
}

func (o GetContractsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetContractsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["results"] = o.Results
	return toSerialize, nil
}

type NullableGetContractsResponse struct {
	value *GetContractsResponse
	isSet bool
}

func (v NullableGetContractsResponse) Get() *GetContractsResponse {
	return v.value
}

func (v *NullableGetContractsResponse) Set(val *GetContractsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetContractsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetContractsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetContractsResponse(val *GetContractsResponse) *NullableGetContractsResponse {
	return &NullableGetContractsResponse{value: val, isSet: true}
}

func (v NullableGetContractsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetContractsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


