/*
Marlowe Runtime REST API

REST API for Marlowe Runtime

API version: 0.0.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ApplyInputsResponseLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApplyInputsResponseLinks{}

// ApplyInputsResponseLinks struct for ApplyInputsResponseLinks
type ApplyInputsResponseLinks struct {
	Transaction *string `json:"transaction,omitempty"`
}

// NewApplyInputsResponseLinks instantiates a new ApplyInputsResponseLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplyInputsResponseLinks() *ApplyInputsResponseLinks {
	this := ApplyInputsResponseLinks{}
	return &this
}

// NewApplyInputsResponseLinksWithDefaults instantiates a new ApplyInputsResponseLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplyInputsResponseLinksWithDefaults() *ApplyInputsResponseLinks {
	this := ApplyInputsResponseLinks{}
	return &this
}

// GetTransaction returns the Transaction field value if set, zero value otherwise.
func (o *ApplyInputsResponseLinks) GetTransaction() string {
	if o == nil || IsNil(o.Transaction) {
		var ret string
		return ret
	}
	return *o.Transaction
}

// GetTransactionOk returns a tuple with the Transaction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplyInputsResponseLinks) GetTransactionOk() (*string, bool) {
	if o == nil || IsNil(o.Transaction) {
		return nil, false
	}
	return o.Transaction, true
}

// HasTransaction returns a boolean if a field has been set.
func (o *ApplyInputsResponseLinks) HasTransaction() bool {
	if o != nil && !IsNil(o.Transaction) {
		return true
	}

	return false
}

// SetTransaction gets a reference to the given string and assigns it to the Transaction field.
func (o *ApplyInputsResponseLinks) SetTransaction(v string) {
	o.Transaction = &v
}

func (o ApplyInputsResponseLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplyInputsResponseLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Transaction) {
		toSerialize["transaction"] = o.Transaction
	}
	return toSerialize, nil
}

type NullableApplyInputsResponseLinks struct {
	value *ApplyInputsResponseLinks
	isSet bool
}

func (v NullableApplyInputsResponseLinks) Get() *ApplyInputsResponseLinks {
	return v.value
}

func (v *NullableApplyInputsResponseLinks) Set(val *ApplyInputsResponseLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableApplyInputsResponseLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableApplyInputsResponseLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplyInputsResponseLinks(val *ApplyInputsResponseLinks) *NullableApplyInputsResponseLinks {
	return &NullableApplyInputsResponseLinks{value: val, isSet: true}
}

func (v NullableApplyInputsResponseLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplyInputsResponseLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


