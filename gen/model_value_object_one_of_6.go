/*
Marlowe Runtime REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.5
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ValueObjectOneOf6 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ValueObjectOneOf6{}

// ValueObjectOneOf6 struct for ValueObjectOneOf6
type ValueObjectOneOf6 struct {
	ValueOfChoice ChoiceIdObject `json:"value_of_choice"`
}

// NewValueObjectOneOf6 instantiates a new ValueObjectOneOf6 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewValueObjectOneOf6(valueOfChoice ChoiceIdObject) *ValueObjectOneOf6 {
	this := ValueObjectOneOf6{}
	this.ValueOfChoice = valueOfChoice
	return &this
}

// NewValueObjectOneOf6WithDefaults instantiates a new ValueObjectOneOf6 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewValueObjectOneOf6WithDefaults() *ValueObjectOneOf6 {
	this := ValueObjectOneOf6{}
	return &this
}

// GetValueOfChoice returns the ValueOfChoice field value
func (o *ValueObjectOneOf6) GetValueOfChoice() ChoiceIdObject {
	if o == nil {
		var ret ChoiceIdObject
		return ret
	}

	return o.ValueOfChoice
}

// GetValueOfChoiceOk returns a tuple with the ValueOfChoice field value
// and a boolean to check if the value has been set.
func (o *ValueObjectOneOf6) GetValueOfChoiceOk() (*ChoiceIdObject, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ValueOfChoice, true
}

// SetValueOfChoice sets field value
func (o *ValueObjectOneOf6) SetValueOfChoice(v ChoiceIdObject) {
	o.ValueOfChoice = v
}

func (o ValueObjectOneOf6) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ValueObjectOneOf6) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["value_of_choice"] = o.ValueOfChoice
	return toSerialize, nil
}

type NullableValueObjectOneOf6 struct {
	value *ValueObjectOneOf6
	isSet bool
}

func (v NullableValueObjectOneOf6) Get() *ValueObjectOneOf6 {
	return v.value
}

func (v *NullableValueObjectOneOf6) Set(val *ValueObjectOneOf6) {
	v.value = val
	v.isSet = true
}

func (v NullableValueObjectOneOf6) IsSet() bool {
	return v.isSet
}

func (v *NullableValueObjectOneOf6) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableValueObjectOneOf6(val *ValueObjectOneOf6) *NullableValueObjectOneOf6 {
	return &NullableValueObjectOneOf6{value: val, isSet: true}
}

func (v NullableValueObjectOneOf6) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableValueObjectOneOf6) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


