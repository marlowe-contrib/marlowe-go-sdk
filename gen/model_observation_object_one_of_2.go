/*
Marlowe Runtime REST API

REST API for Marlowe Runtime

API version: 0.0.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ObservationObjectOneOf2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ObservationObjectOneOf2{}

// ObservationObjectOneOf2 struct for ObservationObjectOneOf2
type ObservationObjectOneOf2 struct {
	Not ObservationObject `json:"not"`
}

// NewObservationObjectOneOf2 instantiates a new ObservationObjectOneOf2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObservationObjectOneOf2(not ObservationObject) *ObservationObjectOneOf2 {
	this := ObservationObjectOneOf2{}
	this.Not = not
	return &this
}

// NewObservationObjectOneOf2WithDefaults instantiates a new ObservationObjectOneOf2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObservationObjectOneOf2WithDefaults() *ObservationObjectOneOf2 {
	this := ObservationObjectOneOf2{}
	return &this
}

// GetNot returns the Not field value
func (o *ObservationObjectOneOf2) GetNot() ObservationObject {
	if o == nil {
		var ret ObservationObject
		return ret
	}

	return o.Not
}

// GetNotOk returns a tuple with the Not field value
// and a boolean to check if the value has been set.
func (o *ObservationObjectOneOf2) GetNotOk() (*ObservationObject, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Not, true
}

// SetNot sets field value
func (o *ObservationObjectOneOf2) SetNot(v ObservationObject) {
	o.Not = v
}

func (o ObservationObjectOneOf2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ObservationObjectOneOf2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["not"] = o.Not
	return toSerialize, nil
}

type NullableObservationObjectOneOf2 struct {
	value *ObservationObjectOneOf2
	isSet bool
}

func (v NullableObservationObjectOneOf2) Get() *ObservationObjectOneOf2 {
	return v.value
}

func (v *NullableObservationObjectOneOf2) Set(val *ObservationObjectOneOf2) {
	v.value = val
	v.isSet = true
}

func (v NullableObservationObjectOneOf2) IsSet() bool {
	return v.isSet
}

func (v *NullableObservationObjectOneOf2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObservationObjectOneOf2(val *ObservationObjectOneOf2) *NullableObservationObjectOneOf2 {
	return &NullableObservationObjectOneOf2{value: val, isSet: true}
}

func (v NullableObservationObjectOneOf2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObservationObjectOneOf2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


