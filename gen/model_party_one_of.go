/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PartyOneOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PartyOneOf{}

// PartyOneOf Refers to a party by role name.
type PartyOneOf struct {
	RoleToken string `json:"role_token"`
}

// NewPartyOneOf instantiates a new PartyOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPartyOneOf(roleToken string) *PartyOneOf {
	this := PartyOneOf{}
	this.RoleToken = roleToken
	return &this
}

// NewPartyOneOfWithDefaults instantiates a new PartyOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPartyOneOfWithDefaults() *PartyOneOf {
	this := PartyOneOf{}
	return &this
}

// GetRoleToken returns the RoleToken field value
func (o *PartyOneOf) GetRoleToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RoleToken
}

// GetRoleTokenOk returns a tuple with the RoleToken field value
// and a boolean to check if the value has been set.
func (o *PartyOneOf) GetRoleTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RoleToken, true
}

// SetRoleToken sets field value
func (o *PartyOneOf) SetRoleToken(v string) {
	o.RoleToken = v
}

func (o PartyOneOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PartyOneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["role_token"] = o.RoleToken
	return toSerialize, nil
}

type NullablePartyOneOf struct {
	value *PartyOneOf
	isSet bool
}

func (v NullablePartyOneOf) Get() *PartyOneOf {
	return v.value
}

func (v *NullablePartyOneOf) Set(val *PartyOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullablePartyOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullablePartyOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePartyOneOf(val *PartyOneOf) *NullablePartyOneOf {
	return &NullablePartyOneOf{value: val, isSet: true}
}

func (v NullablePartyOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePartyOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


