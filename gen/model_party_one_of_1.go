/*
Marlowe Runtime REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.5
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PartyOneOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PartyOneOf1{}

// PartyOneOf1 Refers to a party by Cardano address.
type PartyOneOf1 struct {
	// A cardano address
	Address string `json:"address"`
}

// NewPartyOneOf1 instantiates a new PartyOneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPartyOneOf1(address string) *PartyOneOf1 {
	this := PartyOneOf1{}
	this.Address = address
	return &this
}

// NewPartyOneOf1WithDefaults instantiates a new PartyOneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPartyOneOf1WithDefaults() *PartyOneOf1 {
	this := PartyOneOf1{}
	return &this
}

// GetAddress returns the Address field value
func (o *PartyOneOf1) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *PartyOneOf1) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *PartyOneOf1) SetAddress(v string) {
	o.Address = v
}

func (o PartyOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PartyOneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["address"] = o.Address
	return toSerialize, nil
}

type NullablePartyOneOf1 struct {
	value *PartyOneOf1
	isSet bool
}

func (v NullablePartyOneOf1) Get() *PartyOneOf1 {
	return v.value
}

func (v *NullablePartyOneOf1) Set(val *PartyOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullablePartyOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullablePartyOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePartyOneOf1(val *PartyOneOf1) *NullablePartyOneOf1 {
	return &NullablePartyOneOf1{value: val, isSet: true}
}

func (v NullablePartyOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePartyOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


