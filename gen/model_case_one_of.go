/*
Marlowe Runtime REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.5
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CaseOneOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CaseOneOf{}

// CaseOneOf struct for CaseOneOf
type CaseOneOf struct {
	Case Action `json:"case"`
	Then Contract `json:"then"`
}

// NewCaseOneOf instantiates a new CaseOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCaseOneOf(case_ Action, then Contract) *CaseOneOf {
	this := CaseOneOf{}
	this.Case = case_
	this.Then = then
	return &this
}

// NewCaseOneOfWithDefaults instantiates a new CaseOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCaseOneOfWithDefaults() *CaseOneOf {
	this := CaseOneOf{}
	return &this
}

// GetCase returns the Case field value
func (o *CaseOneOf) GetCase() Action {
	if o == nil {
		var ret Action
		return ret
	}

	return o.Case
}

// GetCaseOk returns a tuple with the Case field value
// and a boolean to check if the value has been set.
func (o *CaseOneOf) GetCaseOk() (*Action, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Case, true
}

// SetCase sets field value
func (o *CaseOneOf) SetCase(v Action) {
	o.Case = v
}

// GetThen returns the Then field value
func (o *CaseOneOf) GetThen() Contract {
	if o == nil {
		var ret Contract
		return ret
	}

	return o.Then
}

// GetThenOk returns a tuple with the Then field value
// and a boolean to check if the value has been set.
func (o *CaseOneOf) GetThenOk() (*Contract, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Then, true
}

// SetThen sets field value
func (o *CaseOneOf) SetThen(v Contract) {
	o.Then = v
}

func (o CaseOneOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CaseOneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["case"] = o.Case
	toSerialize["then"] = o.Then
	return toSerialize, nil
}

type NullableCaseOneOf struct {
	value *CaseOneOf
	isSet bool
}

func (v NullableCaseOneOf) Get() *CaseOneOf {
	return v.value
}

func (v *NullableCaseOneOf) Set(val *CaseOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableCaseOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableCaseOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCaseOneOf(val *CaseOneOf) *NullableCaseOneOf {
	return &NullableCaseOneOf{value: val, isSet: true}
}

func (v NullableCaseOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCaseOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


