/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ContractObjectOneOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContractObjectOneOf1{}

// ContractObjectOneOf1 If an observation is true, the first contract applies, otherwise the second contract applies.
type ContractObjectOneOf1 struct {
	Else ContractObject `json:"else"`
	If ObservationObject `json:"if"`
	Then ContractObject `json:"then"`
}

// NewContractObjectOneOf1 instantiates a new ContractObjectOneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContractObjectOneOf1(else_ ContractObject, if_ ObservationObject, then ContractObject) *ContractObjectOneOf1 {
	this := ContractObjectOneOf1{}
	this.Else = else_
	this.If = if_
	this.Then = then
	return &this
}

// NewContractObjectOneOf1WithDefaults instantiates a new ContractObjectOneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContractObjectOneOf1WithDefaults() *ContractObjectOneOf1 {
	this := ContractObjectOneOf1{}
	return &this
}

// GetElse returns the Else field value
func (o *ContractObjectOneOf1) GetElse() ContractObject {
	if o == nil {
		var ret ContractObject
		return ret
	}

	return o.Else
}

// GetElseOk returns a tuple with the Else field value
// and a boolean to check if the value has been set.
func (o *ContractObjectOneOf1) GetElseOk() (*ContractObject, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Else, true
}

// SetElse sets field value
func (o *ContractObjectOneOf1) SetElse(v ContractObject) {
	o.Else = v
}

// GetIf returns the If field value
func (o *ContractObjectOneOf1) GetIf() ObservationObject {
	if o == nil {
		var ret ObservationObject
		return ret
	}

	return o.If
}

// GetIfOk returns a tuple with the If field value
// and a boolean to check if the value has been set.
func (o *ContractObjectOneOf1) GetIfOk() (*ObservationObject, bool) {
	if o == nil {
		return nil, false
	}
	return &o.If, true
}

// SetIf sets field value
func (o *ContractObjectOneOf1) SetIf(v ObservationObject) {
	o.If = v
}

// GetThen returns the Then field value
func (o *ContractObjectOneOf1) GetThen() ContractObject {
	if o == nil {
		var ret ContractObject
		return ret
	}

	return o.Then
}

// GetThenOk returns a tuple with the Then field value
// and a boolean to check if the value has been set.
func (o *ContractObjectOneOf1) GetThenOk() (*ContractObject, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Then, true
}

// SetThen sets field value
func (o *ContractObjectOneOf1) SetThen(v ContractObject) {
	o.Then = v
}

func (o ContractObjectOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContractObjectOneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["else"] = o.Else
	toSerialize["if"] = o.If
	toSerialize["then"] = o.Then
	return toSerialize, nil
}

type NullableContractObjectOneOf1 struct {
	value *ContractObjectOneOf1
	isSet bool
}

func (v NullableContractObjectOneOf1) Get() *ContractObjectOneOf1 {
	return v.value
}

func (v *NullableContractObjectOneOf1) Set(val *ContractObjectOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableContractObjectOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableContractObjectOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContractObjectOneOf1(val *ContractObjectOneOf1) *NullableContractObjectOneOf1 {
	return &NullableContractObjectOneOf1{value: val, isSet: true}
}

func (v NullableContractObjectOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContractObjectOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


