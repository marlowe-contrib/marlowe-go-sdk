/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ValueObjectOneOf8 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ValueObjectOneOf8{}

// ValueObjectOneOf8 struct for ValueObjectOneOf8
type ValueObjectOneOf8 struct {
	// An arbitrary text identifier for an object in a Marlowe object bundle.
	Ref string `json:"ref"`
}

// NewValueObjectOneOf8 instantiates a new ValueObjectOneOf8 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewValueObjectOneOf8(ref string) *ValueObjectOneOf8 {
	this := ValueObjectOneOf8{}
	this.Ref = ref
	return &this
}

// NewValueObjectOneOf8WithDefaults instantiates a new ValueObjectOneOf8 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewValueObjectOneOf8WithDefaults() *ValueObjectOneOf8 {
	this := ValueObjectOneOf8{}
	return &this
}

// GetRef returns the Ref field value
func (o *ValueObjectOneOf8) GetRef() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Ref
}

// GetRefOk returns a tuple with the Ref field value
// and a boolean to check if the value has been set.
func (o *ValueObjectOneOf8) GetRefOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ref, true
}

// SetRef sets field value
func (o *ValueObjectOneOf8) SetRef(v string) {
	o.Ref = v
}

func (o ValueObjectOneOf8) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ValueObjectOneOf8) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ref"] = o.Ref
	return toSerialize, nil
}

type NullableValueObjectOneOf8 struct {
	value *ValueObjectOneOf8
	isSet bool
}

func (v NullableValueObjectOneOf8) Get() *ValueObjectOneOf8 {
	return v.value
}

func (v *NullableValueObjectOneOf8) Set(val *ValueObjectOneOf8) {
	v.value = val
	v.isSet = true
}

func (v NullableValueObjectOneOf8) IsSet() bool {
	return v.isSet
}

func (v *NullableValueObjectOneOf8) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableValueObjectOneOf8(val *ValueObjectOneOf8) *NullableValueObjectOneOf8 {
	return &NullableValueObjectOneOf8{value: val, isSet: true}
}

func (v NullableValueObjectOneOf8) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableValueObjectOneOf8) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


