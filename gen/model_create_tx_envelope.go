/*
Marlowe Runtime REST API

REST API for Marlowe Runtime

API version: 0.0.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateTxEnvelope type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTxEnvelope{}

// CreateTxEnvelope The \"type\" property of \"tx\" must be \"Tx BabbageEra\" or \"Tx ConwayEra\"
type CreateTxEnvelope struct {
	// A reference to a transaction output with a transaction ID and index.
	ContractId string `json:"contractId"`
	SafetyErrors []SafetyError `json:"safetyErrors,omitempty"`
	Tx TextEnvelope `json:"tx"`
}

// NewCreateTxEnvelope instantiates a new CreateTxEnvelope object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTxEnvelope(contractId string, tx TextEnvelope) *CreateTxEnvelope {
	this := CreateTxEnvelope{}
	this.ContractId = contractId
	this.Tx = tx
	return &this
}

// NewCreateTxEnvelopeWithDefaults instantiates a new CreateTxEnvelope object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTxEnvelopeWithDefaults() *CreateTxEnvelope {
	this := CreateTxEnvelope{}
	return &this
}

// GetContractId returns the ContractId field value
func (o *CreateTxEnvelope) GetContractId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContractId
}

// GetContractIdOk returns a tuple with the ContractId field value
// and a boolean to check if the value has been set.
func (o *CreateTxEnvelope) GetContractIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContractId, true
}

// SetContractId sets field value
func (o *CreateTxEnvelope) SetContractId(v string) {
	o.ContractId = v
}

// GetSafetyErrors returns the SafetyErrors field value if set, zero value otherwise.
func (o *CreateTxEnvelope) GetSafetyErrors() []SafetyError {
	if o == nil || IsNil(o.SafetyErrors) {
		var ret []SafetyError
		return ret
	}
	return o.SafetyErrors
}

// GetSafetyErrorsOk returns a tuple with the SafetyErrors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTxEnvelope) GetSafetyErrorsOk() ([]SafetyError, bool) {
	if o == nil || IsNil(o.SafetyErrors) {
		return nil, false
	}
	return o.SafetyErrors, true
}

// HasSafetyErrors returns a boolean if a field has been set.
func (o *CreateTxEnvelope) HasSafetyErrors() bool {
	if o != nil && !IsNil(o.SafetyErrors) {
		return true
	}

	return false
}

// SetSafetyErrors gets a reference to the given []SafetyError and assigns it to the SafetyErrors field.
func (o *CreateTxEnvelope) SetSafetyErrors(v []SafetyError) {
	o.SafetyErrors = v
}

// GetTx returns the Tx field value
func (o *CreateTxEnvelope) GetTx() TextEnvelope {
	if o == nil {
		var ret TextEnvelope
		return ret
	}

	return o.Tx
}

// GetTxOk returns a tuple with the Tx field value
// and a boolean to check if the value has been set.
func (o *CreateTxEnvelope) GetTxOk() (*TextEnvelope, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tx, true
}

// SetTx sets field value
func (o *CreateTxEnvelope) SetTx(v TextEnvelope) {
	o.Tx = v
}

func (o CreateTxEnvelope) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTxEnvelope) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["contractId"] = o.ContractId
	if !IsNil(o.SafetyErrors) {
		toSerialize["safetyErrors"] = o.SafetyErrors
	}
	toSerialize["tx"] = o.Tx
	return toSerialize, nil
}

type NullableCreateTxEnvelope struct {
	value *CreateTxEnvelope
	isSet bool
}

func (v NullableCreateTxEnvelope) Get() *CreateTxEnvelope {
	return v.value
}

func (v *NullableCreateTxEnvelope) Set(val *CreateTxEnvelope) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTxEnvelope) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTxEnvelope) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTxEnvelope(val *CreateTxEnvelope) *NullableCreateTxEnvelope {
	return &NullableCreateTxEnvelope{value: val, isSet: true}
}

func (v NullableCreateTxEnvelope) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTxEnvelope) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


