/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ContractObjectOneOf4 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContractObjectOneOf4{}

// ContractObjectOneOf4 Check an observation and produce a warning if it is false.
type ContractObjectOneOf4 struct {
	Assert ObservationObject `json:"assert"`
	Then ContractObject `json:"then"`
}

// NewContractObjectOneOf4 instantiates a new ContractObjectOneOf4 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContractObjectOneOf4(assert ObservationObject, then ContractObject) *ContractObjectOneOf4 {
	this := ContractObjectOneOf4{}
	this.Assert = assert
	this.Then = then
	return &this
}

// NewContractObjectOneOf4WithDefaults instantiates a new ContractObjectOneOf4 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContractObjectOneOf4WithDefaults() *ContractObjectOneOf4 {
	this := ContractObjectOneOf4{}
	return &this
}

// GetAssert returns the Assert field value
func (o *ContractObjectOneOf4) GetAssert() ObservationObject {
	if o == nil {
		var ret ObservationObject
		return ret
	}

	return o.Assert
}

// GetAssertOk returns a tuple with the Assert field value
// and a boolean to check if the value has been set.
func (o *ContractObjectOneOf4) GetAssertOk() (*ObservationObject, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Assert, true
}

// SetAssert sets field value
func (o *ContractObjectOneOf4) SetAssert(v ObservationObject) {
	o.Assert = v
}

// GetThen returns the Then field value
func (o *ContractObjectOneOf4) GetThen() ContractObject {
	if o == nil {
		var ret ContractObject
		return ret
	}

	return o.Then
}

// GetThenOk returns a tuple with the Then field value
// and a boolean to check if the value has been set.
func (o *ContractObjectOneOf4) GetThenOk() (*ContractObject, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Then, true
}

// SetThen sets field value
func (o *ContractObjectOneOf4) SetThen(v ContractObject) {
	o.Then = v
}

func (o ContractObjectOneOf4) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContractObjectOneOf4) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["assert"] = o.Assert
	toSerialize["then"] = o.Then
	return toSerialize, nil
}

type NullableContractObjectOneOf4 struct {
	value *ContractObjectOneOf4
	isSet bool
}

func (v NullableContractObjectOneOf4) Get() *ContractObjectOneOf4 {
	return v.value
}

func (v *NullableContractObjectOneOf4) Set(val *ContractObjectOneOf4) {
	v.value = val
	v.isSet = true
}

func (v NullableContractObjectOneOf4) IsSet() bool {
	return v.isSet
}

func (v *NullableContractObjectOneOf4) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContractObjectOneOf4(val *ContractObjectOneOf4) *NullableContractObjectOneOf4 {
	return &NullableContractObjectOneOf4{value: val, isSet: true}
}

func (v NullableContractObjectOneOf4) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContractObjectOneOf4) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


