/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BlockHeader type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlockHeader{}

// BlockHeader struct for BlockHeader
type BlockHeader struct {
	BlockHeaderHash string `json:"blockHeaderHash"`
	BlockNo int64 `json:"blockNo"`
	SlotNo int64 `json:"slotNo"`
}

// NewBlockHeader instantiates a new BlockHeader object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlockHeader(blockHeaderHash string, blockNo int64, slotNo int64) *BlockHeader {
	this := BlockHeader{}
	this.BlockHeaderHash = blockHeaderHash
	this.BlockNo = blockNo
	this.SlotNo = slotNo
	return &this
}

// NewBlockHeaderWithDefaults instantiates a new BlockHeader object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlockHeaderWithDefaults() *BlockHeader {
	this := BlockHeader{}
	return &this
}

// GetBlockHeaderHash returns the BlockHeaderHash field value
func (o *BlockHeader) GetBlockHeaderHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BlockHeaderHash
}

// GetBlockHeaderHashOk returns a tuple with the BlockHeaderHash field value
// and a boolean to check if the value has been set.
func (o *BlockHeader) GetBlockHeaderHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BlockHeaderHash, true
}

// SetBlockHeaderHash sets field value
func (o *BlockHeader) SetBlockHeaderHash(v string) {
	o.BlockHeaderHash = v
}

// GetBlockNo returns the BlockNo field value
func (o *BlockHeader) GetBlockNo() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.BlockNo
}

// GetBlockNoOk returns a tuple with the BlockNo field value
// and a boolean to check if the value has been set.
func (o *BlockHeader) GetBlockNoOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BlockNo, true
}

// SetBlockNo sets field value
func (o *BlockHeader) SetBlockNo(v int64) {
	o.BlockNo = v
}

// GetSlotNo returns the SlotNo field value
func (o *BlockHeader) GetSlotNo() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.SlotNo
}

// GetSlotNoOk returns a tuple with the SlotNo field value
// and a boolean to check if the value has been set.
func (o *BlockHeader) GetSlotNoOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SlotNo, true
}

// SetSlotNo sets field value
func (o *BlockHeader) SetSlotNo(v int64) {
	o.SlotNo = v
}

func (o BlockHeader) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlockHeader) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["blockHeaderHash"] = o.BlockHeaderHash
	toSerialize["blockNo"] = o.BlockNo
	toSerialize["slotNo"] = o.SlotNo
	return toSerialize, nil
}

type NullableBlockHeader struct {
	value *BlockHeader
	isSet bool
}

func (v NullableBlockHeader) Get() *BlockHeader {
	return v.value
}

func (v *NullableBlockHeader) Set(val *BlockHeader) {
	v.value = val
	v.isSet = true
}

func (v NullableBlockHeader) IsSet() bool {
	return v.isSet
}

func (v *NullableBlockHeader) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlockHeader(val *BlockHeader) *NullableBlockHeader {
	return &NullableBlockHeader{value: val, isSet: true}
}

func (v NullableBlockHeader) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlockHeader) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


