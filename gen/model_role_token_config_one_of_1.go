/*
Marlowe Runtime REST API

REST API for Marlowe Runtime

API version: 0.0.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RoleTokenConfigOneOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoleTokenConfigOneOf1{}

// RoleTokenConfigOneOf1 struct for RoleTokenConfigOneOf1
type RoleTokenConfigOneOf1 struct {
	Metadata *TokenMetadata `json:"metadata,omitempty"`
	// The type of script receiving the role token.
	Script string `json:"script"`
}

// NewRoleTokenConfigOneOf1 instantiates a new RoleTokenConfigOneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoleTokenConfigOneOf1(script string) *RoleTokenConfigOneOf1 {
	this := RoleTokenConfigOneOf1{}
	this.Script = script
	return &this
}

// NewRoleTokenConfigOneOf1WithDefaults instantiates a new RoleTokenConfigOneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoleTokenConfigOneOf1WithDefaults() *RoleTokenConfigOneOf1 {
	this := RoleTokenConfigOneOf1{}
	return &this
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *RoleTokenConfigOneOf1) GetMetadata() TokenMetadata {
	if o == nil || IsNil(o.Metadata) {
		var ret TokenMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleTokenConfigOneOf1) GetMetadataOk() (*TokenMetadata, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *RoleTokenConfigOneOf1) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given TokenMetadata and assigns it to the Metadata field.
func (o *RoleTokenConfigOneOf1) SetMetadata(v TokenMetadata) {
	o.Metadata = &v
}

// GetScript returns the Script field value
func (o *RoleTokenConfigOneOf1) GetScript() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Script
}

// GetScriptOk returns a tuple with the Script field value
// and a boolean to check if the value has been set.
func (o *RoleTokenConfigOneOf1) GetScriptOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Script, true
}

// SetScript sets field value
func (o *RoleTokenConfigOneOf1) SetScript(v string) {
	o.Script = v
}

func (o RoleTokenConfigOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoleTokenConfigOneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	toSerialize["script"] = o.Script
	return toSerialize, nil
}

type NullableRoleTokenConfigOneOf1 struct {
	value *RoleTokenConfigOneOf1
	isSet bool
}

func (v NullableRoleTokenConfigOneOf1) Get() *RoleTokenConfigOneOf1 {
	return v.value
}

func (v *NullableRoleTokenConfigOneOf1) Set(val *RoleTokenConfigOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableRoleTokenConfigOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableRoleTokenConfigOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoleTokenConfigOneOf1(val *RoleTokenConfigOneOf1) *NullableRoleTokenConfigOneOf1 {
	return &NullableRoleTokenConfigOneOf1{value: val, isSet: true}
}

func (v NullableRoleTokenConfigOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoleTokenConfigOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


