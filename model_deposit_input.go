/*
Marlowe Runtime REST API

REST API for Marlowe Runtime

API version: 0.0.5.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marloweruntime

import (
	"encoding/json"
)

// checks if the DepositInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DepositInput{}

// DepositInput Deposit funds into an account in a contract
type DepositInput struct {
	InputFromParty Party `json:"input_from_party"`
	IntoAccount Party `json:"into_account"`
	OfToken Token `json:"of_token"`
	ThatDeposits int32 `json:"that_deposits"`
}

// NewDepositInput instantiates a new DepositInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDepositInput(inputFromParty Party, intoAccount Party, ofToken Token, thatDeposits int32) *DepositInput {
	this := DepositInput{}
	this.InputFromParty = inputFromParty
	this.IntoAccount = intoAccount
	this.OfToken = ofToken
	this.ThatDeposits = thatDeposits
	return &this
}

// NewDepositInputWithDefaults instantiates a new DepositInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDepositInputWithDefaults() *DepositInput {
	this := DepositInput{}
	return &this
}

// GetInputFromParty returns the InputFromParty field value
func (o *DepositInput) GetInputFromParty() Party {
	if o == nil {
		var ret Party
		return ret
	}

	return o.InputFromParty
}

// GetInputFromPartyOk returns a tuple with the InputFromParty field value
// and a boolean to check if the value has been set.
func (o *DepositInput) GetInputFromPartyOk() (*Party, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InputFromParty, true
}

// SetInputFromParty sets field value
func (o *DepositInput) SetInputFromParty(v Party) {
	o.InputFromParty = v
}

// GetIntoAccount returns the IntoAccount field value
func (o *DepositInput) GetIntoAccount() Party {
	if o == nil {
		var ret Party
		return ret
	}

	return o.IntoAccount
}

// GetIntoAccountOk returns a tuple with the IntoAccount field value
// and a boolean to check if the value has been set.
func (o *DepositInput) GetIntoAccountOk() (*Party, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IntoAccount, true
}

// SetIntoAccount sets field value
func (o *DepositInput) SetIntoAccount(v Party) {
	o.IntoAccount = v
}

// GetOfToken returns the OfToken field value
func (o *DepositInput) GetOfToken() Token {
	if o == nil {
		var ret Token
		return ret
	}

	return o.OfToken
}

// GetOfTokenOk returns a tuple with the OfToken field value
// and a boolean to check if the value has been set.
func (o *DepositInput) GetOfTokenOk() (*Token, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OfToken, true
}

// SetOfToken sets field value
func (o *DepositInput) SetOfToken(v Token) {
	o.OfToken = v
}

// GetThatDeposits returns the ThatDeposits field value
func (o *DepositInput) GetThatDeposits() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ThatDeposits
}

// GetThatDepositsOk returns a tuple with the ThatDeposits field value
// and a boolean to check if the value has been set.
func (o *DepositInput) GetThatDepositsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ThatDeposits, true
}

// SetThatDeposits sets field value
func (o *DepositInput) SetThatDeposits(v int32) {
	o.ThatDeposits = v
}

func (o DepositInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DepositInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["input_from_party"] = o.InputFromParty
	toSerialize["into_account"] = o.IntoAccount
	toSerialize["of_token"] = o.OfToken
	toSerialize["that_deposits"] = o.ThatDeposits
	return toSerialize, nil
}

type NullableDepositInput struct {
	value *DepositInput
	isSet bool
}

func (v NullableDepositInput) Get() *DepositInput {
	return v.value
}

func (v *NullableDepositInput) Set(val *DepositInput) {
	v.value = val
	v.isSet = true
}

func (v NullableDepositInput) IsSet() bool {
	return v.isSet
}

func (v *NullableDepositInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDepositInput(val *DepositInput) *NullableDepositInput {
	return &NullableDepositInput{value: val, isSet: true}
}

func (v NullableDepositInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDepositInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


